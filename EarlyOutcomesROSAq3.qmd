---
title: "A comparison of the clinical utility and cost metrics before and after the introduction of a robotic system (ROSA, Zimmer Biomet) into total knee arthroplasty in a public hospital"
author: "Corey Scholes"
type: "website"
number-sections: true
number-depth: 3
date: "2025-Oct-03"
date-modified: "2023-May-06"
bibliography: Early RAS references.bib

format:
  docx: 
    toc: true
    number-sections: true
    toc-depth: 2
  html:
    df-print: paged
    code-fold: true
    toc: true
  pdf:
    toc: true
    colorlinks: true
editor: visual
execute: 
  echo: true
  warning: false
  error: false
---

# Preamble

**Author Affiliation:** EBM Analytics

**Client \| Sponsor:** Lorenzo Calabro; Dept Orthopaedics, QEII Hospital

**EBMAReference**: Pub_Early_Outcomes_Robotic_Arthroplasty_CB048

**Version:** 3.3

This analysis is a companion piece to the [manuscript](https://docs.google.com/document/d/1fQi6GebYPOwunt_OJrfVft7fGzUQ3A3Fu05ZsbTFLDk/edit?usp=sharing "Link to RAS manuscript draft") of the project. The analysis report has been organised as per the STROBE guidelines and checklist [@Vandenbroucke2007], as well as the IDEAL framework for surgical innovation [@Ergina2013]. The contents of the sections has been derived from the manuscript (partly completed at the time of drafting), the [protocol](https://drive.google.com/file/d/15XY0UEf0YYIWuJhtPWUDXbBLfwnKZAOr/view?usp=sharing "Early RAS HREC protocol - approved") approved by the local health district HREC 13-Jun-2023, as well as an earlier [study viability report](https://docs.google.com/presentation/d/1cj4_lGa0OhAg25rQvJh1M1d_UirlHdb6Y9L7pL1IaSc/edit?usp=sharing "Early RAS study viability report") generated by EBMA, and the results of the analysis, where appropriate. The analysis was generated using `{r} R.Version()$version.string` in RStudio (v2024.04.0 Build 735) with appropriate specialised packages as required. Code and text were combined within the report using the *epoxy* package (v1.0.0) [@epoxy].

# STROBE \[1\] Title:

<!--# Assess the appropriateness and appeal of the title -->

A suggested title is the following;

*Introduction of a robotic system does not lead to increased procedure duration or adverse events incidence in total knee arthroplasty at up to 90 days followup. A retrospective comparative cohort analysis of a public hospital.*

# STROBE \[1\] Abstract:

<!--# Critically analyse the informative and balanced nature of the abstract. -->

Abstract and full manuscript needs to be checked for spelling errors and first use of abbreviations.

# Introduction:

<!--# Critically assess the justification for conducting the observational study. -->

Recommend aligning the rationale for the study to the innovation framework detailed in the IDEAL series. The HREC protocol *does not* yet provide a detailed justification for the study. Establishing where the contemporary knowledge aligns to the IDEAL framework may assist. Consider the specific setting in which the RAS is used.

## STROBE \[2\] Background

<!--# Provide a critical analysis of the background information on the research question or problem. -->

Considering the detailed discussion regarding the adverse events outcomes (as well as system failure) by the co-authors (29-Apr-2024).

## STROBE \[3\] Objectives

<!--# Evaluate the clarity and significance of the study's objectives and hypotheses. -->

The clarity and significance of the objectives have evolved over time. The original study question as per the study viability report was the following;

::: {#tbl-studyquestion}
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Component    | Study-Specific                                                                                                                                                                                                              |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Population   | In patients presenting with end-stage knee degeneration electing to undergo lower limb total joint arthroplasty                                                                                                             |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Intervention | **What is the effect** of total knee replacement (posterior-stabilised \| medially-stabilised design, mechanical alignment) with robot-assisted guidance                                                                    |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Comparator   | Compared to imageless navigated (Zimmer, Stryker) TKA *or manual instrumentation* for guidance of bone resection and component placement                                                                                    |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Outcomes     | On the                                                                                                                                                                                                                      |
|              |                                                                                                                                                                                                                             |
|              | i\) rate of treatment success/failure, (as defined by appropriate recovery in mechanical integrity of the implant and its placement, pain, function, satisfaction) at 3 months follow-up,                                   |
|              |                                                                                                                                                                                                                             |
|              | ii\) length of stay, theatre time and CSD\* as well as                                                                                                                                                                      |
|              |                                                                                                                                                                                                                             |
|              | iii\) incidence/nature of complications at up to 3 months follow-up, when controlling for patient (demographic, anatomic), pathology and management (technique, approach, alignment guidance, balancing technique) factors. |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Study question as per study plan. Comparator updated **8-May-2024**
:::

This was summarised to the following aim in the HREC protocol;

-   To assess the clinical utility and cost metrics (where available) before and after the introduction of the robotic-assisted surgery (RAS) system (ROSA, Zimmer Biomet) into total knee arthroplasty in a public hospital setting.

-   Assess the effect of group on the total incidence of adverse events at up to 90 days follow up

-   Assess the effect of group on procedure duration

No hypotheses were explicitly stated in the protocol. It is recommended that the following be considered for inclusion in the manuscript (in an appropriate form);

**Clinical hypotheses**

-   Robotic arthroplasty for total knee replacement provides equivalent or superior complications and patient-reported outcomes compared to non-robotic cases within the department

-   Robotic arthroplasty provides superior inputs for cost-benefit analysis relative to high-volume TKA in a public hospital setting

    -   Length of stay (needs to be lower)

    -   Adverse events (needs to be equivalent or lower)

    -   Operative/theatre time (needs to be lower)

    -   Tray usage (sterilisation) (needs to be lower)

**Statistical hypothesis**

-   When adjusted for covariates, is Group significantly associated with theatre duration?

-   When adjusted for covariates, is Group significantly associated with complication (incidence/survival); discharge readiness (LoS, destination) and/or PROMs at 90-day follow-up?

### IDEAL Stage2b \[1\]: Definite evaluation

<!--# Prospective observational studies should be designed with a definite evaluation in mind -->

The IDEAL framework recommends that a definitive evaluation be presented as a part of an observational study - and this has been achieved in this present analysis.

# Methods:

## STROBE \[4\] Study Design:

<!--# Critically evaluate the appropriateness of the chosen observational study design (e.g., cohort, case-control). -->

The case-control retrospective analysis designed for this analysis provides the most robust comparison between the conditions of having the RAS present versus absent in the same surgeon group, as well as benchmarking against the outcomes of the hospital department.

::: {#fig-studydesign}
![](images/QEII_SVRpart2_ROSA%20Comparison.png){fig-alt="Figure outlining the study design for comparison between groups of patients"}

Proposed study design for retrospective comparative analysis.
:::

## IDEAL Stage2b \[2\]: Protocol

<!--# Observational studies should have a protocol -->

The author group will need to decide whether they wish to release the protocol (in full or in part) that was developed prior to data collection.

## STROBE \[5\] Setting:

<!--# Assess the relevance and representativeness of the study setting. -->

The study setting is an orthopaedic department within a medium-sized metropolitan public hospital in a capital city of Australia. The analysis and data collection have captured all eligible arthroplasty cases from the commencement date of the department clinical quality registry to the time of initial analysis. It is asserted that the setting is representative of orthopaedic care in Australia and possesses sufficient equivalence for consideration internationally.

## Ready libraries

The environment was prepared by loading the required packages in advance; confirming that the necessary packages were already installed and if not, installing them. Where appropriate, citations to packages used appear at first use in the text.

```{r}
#| label: load-packages
#| code-summary: "Packages"

if (!require("pacman")) install.packages("pacman")
pacman::p_load(# Load required packages
  "mets",
  "adjustedCurves",
  "googlesheets4",
  "readxl",
  "tidyverse",
  "tidymodels",
  "tidytext",
  "tidycmprsk",
  "tictoc",
  "stringr",
  "lubridate",
  "gt",
  "gtsummary",
  "consort",
  "survival",
  "survminer",
  "ggdag",
  "ggplot2",
  "ggdist",
  "ggsurvfit",
  "ggfortify",
  "mice",
  "marginaleffects",
  "patchwork",
  "naniar",
  "quantreg",
  "broom",
  "epoxy",
  "flextable",
  "wordcloud",
  "npsurvSS",
  "adjustedCurves",
  "riskRegression"
  )
```

```{r}
#| label: tbl-pkgcite
#| echo: false
#| tbl-cap: Summary of package usage and citations

pkgs <- grateful::cite_packages(
  dependencies = FALSE,
  output = "table", 
  out.dir = ".",
  cite.tidyverse = TRUE,
  include.RStudio = FALSE,
  bib.file = "grateful-refs.bib"
  )

knitr::kable(
  pkgs
)



```

## Authorisations

Access to input datasets was pre-authorised using the *gargle* package and *googledrive*.

```{r}
#| label: auth2
#| echo: false

options(
  gargle_oauth_cache = ".secrets",
  gargle_oauth_email = TRUE
)

googledrive::drive_auth(
  cache = ".secrets", 
  email = TRUE
  )
```

```{r}
#| label: data-sources
#| echo: false

SheetIDs <- list(
  MasterList = "https://docs.google.com/spreadsheets/d/1Nk4i8g65C-i7-24KJdBoMn7QwGrkoYA88l5V45b47Wk/edit",
  ComplicEntry = "https://docs.google.com/spreadsheets/d/1seid7-9VvYKkiPxgGrD81xL_73Q7WKF18DLolB6Natc/edit"
)
  
```

## Processing functions

```{r}
process_gdrive_hospital_files <- function(folder_id) {
  # Create temp directory
  temp_dir <- tempdir()
  download_dir <- file.path(temp_dir, "hospital_files")
  dir.create(download_dir, showWarnings = FALSE, recursive = TRUE)
  
  tryCatch({
    # Get list of .xls files from folder
    cat("Fetching file list from Drive...\n")
    drive_files <- googledrive::drive_ls(googledrive::as_id(folder_id)) %>%
      dplyr::filter(stringr::str_detect(name, "\\.xls$"))
    
    if (nrow(drive_files) == 0) {
      warning("No .xls files found in Google Drive folder")
      return(data.frame())
    }
    
    cat("Found", nrow(drive_files), ".xls files. Downloading...\n")
    
    # Download files with progress
    purrr::iwalk(drive_files$id, ~ {
      file_name <- drive_files$name[drive_files$id == .x]
      cat("Downloading:", file_name, "\n")
      googledrive::drive_download(
        googledrive::as_id(.x), 
        path = file.path(download_dir, file_name),
        overwrite = TRUE
      )
    })
    
    # Process the downloaded files
    cat("Processing files...\n")
    result <- list.files(
      path = download_dir,
      pattern = "\\.xls$", 
      full.names = TRUE
    ) %>% 
    purrr::map(~ {
      tryCatch({
        readxl::read_xls(
          .,
          sheet = "Sheet1",
          range = "D1:L100",
          col_names = TRUE,
          col_types = "text",
          trim_ws = TRUE
        )
      }, error = function(e) {
        warning("Failed to read file: ", basename(.), " Error: ", e$message)
        return(NULL)
      })
    }) %>%
    purrr::compact() %>%  # Remove NULL results
    purrr::map2(
      .y = basename(list.files(
        path = download_dir,
        pattern = "\\.xls$", 
        full.names = TRUE
      )), 
      ~ dplyr::mutate(.x, DataFrameName = .y)
    ) %>% 
    purrr::list_rbind(names_to = "DataFrameID")
    
    return(result)
    
  }, finally = {
    # Clean up temp files
    unlink(download_dir, recursive = TRUE)
  })
}
```

# STROBE \[8\] Data Sources/Measurement:

Prior to data collection, a [data dictionary](https://docs.google.com/spreadsheets/d/1Nk4i8g65C-i7-24KJdBoMn7QwGrkoYA88l5V45b47Wk/edit?usp=sharing "Project data dictionary") was compiled and agreed by the co-authors to establish the key variables for the dataset.

## Mastersheet Preparation

An initial mastersheet was compiled by combining the following inputs;

### Hospital exports - Arthroplasty Activity

-   A report was requested from the hospital which was provided in a series of xls exports.

-   Filenames were extracted using *rbase* (v`{r} utils::packageVersion("base")`) [@base].

-   The *purrr* package (v`{r} utils::packageVersion("purrr")`) [@purrr] was used to loop over each file of the folder list, the data within each file were imported using the *readxl* package (v`{r} utils::packageVersion("readxl")`) [@readxl].

-   The dataframes were combined into one using *tidyverse* syntax (v`{r} utils::packageVersion("tidyverse")`) [@tidyverse].

```{r}
#| label: snapshot-folder
#| echo: false

folderid1 <- "1K6g9OFP44xXWwhA_34xjXY0Lvw6lqYrH"

#setwd("G:\\My Drive\\EBMA\\Client Drive\\QEII Jubilee\\EBMA Working\\Registry Custodian\\Data Flow\\Consult Lists\\Retrospective Surgery Lists\\Feb2021 to Feb2023")
```

```{r}
#| label: Master-Data-inputs-1

Hospital1 <- process_gdrive_hospital_files(folderid1)


```

The combined dataframe was reorganised with columns renamed, additional columns added and filtered based on available Unique Record Number. Date columns were reformatted using the *lubridate* package (v`{r} utils::packageVersion("lubridate")`) [@lubridate]. Temporary identifier columns were added to provide a consistent linkage key across tables from different sources by combining URN, surgery date and surgery side.

```{r}
#| label: Master-Data-inputs-2
# Tidy up combined dataframe

Hospital2 <- Hospital1 %>% 
  mutate(
    URN = case_when(
      !is.na(`UR NUMBER`) & is.na(`UR #`) ~ `UR NUMBER`,
      is.na(`UR NUMBER`) & !is.na(`UR #`) ~ `UR #`)
    ) %>% mutate(
    Type = case_when(
      !is.na(`Prim/Rev/Bilateral`) & is.na(`PRIM/REV/PART`) & is.na(`PRIM/REV/PARTIAL`) ~ `Prim/Rev/Bilateral`,
        is.na(`Prim/Rev/Bilateral`) & !is.na(`PRIM/REV/PARTIAL`) & is.na(`PRIM/REV/PART`) ~ `PRIM/REV/PARTIAL`,
        is.na(`Prim/Rev/Bilateral`) & is.na(`PRIM/REV/PARTIAL`) & !is.na(`PRIM/REV/PART`) ~ `PRIM/REV/PART`)
    ) %>% rename(
      DateSurgery = `OP DATE`
      ) %>% mutate(
  DateSurgery2 = str_replace_all(DateSurgery,"\\.","-")
  ) %>% mutate(
    URN2 = gsub("'","",URN),
    DateSurgery3 = lubridate::dmy(DateSurgery2)
    ) %>% filter(
      !is.na(URN2)
      ) %>% dplyr::select(
        -(c(
          `UR NUMBER`,
          `UR #`,
          `Prim/Rev/Bilateral`,
          `PRIM/REV/PARTIAL`,
          `PRIM/REV/PART`,
          URN,
          DateSurgery,
          DateSurgery2,
          DataFrameName))
        ) %>% rename(
          DateSurgery = "DateSurgery3",
          URN = "URN2",
          Joint = "KNEE/HIP",
          Side = "SIDE",
          Brand = "COMPANY",
          Device = "SYSTEM"
        )
```

The surgeon-consultant identifier was recoded to a re-identifiable format and the surgery date converted to a numeric format. Temporary identifiers were added as described above.

```{r}
#| label: Master-Grouping
#| echo: true

# Recode Surgeon
Surgeon <- unique(Hospital2$CONSULTANT)

Hospital3 <- Hospital2 %>% filter(
  Joint == "Knee"
  ) %>% rename(
    SurgeryDate = "DateSurgery",
    PatientID = "URN",
    SurgerySide = "Side",
    SurgeryType = "Type"
    ) %>% dplyr::mutate(
    SurgerySide = stringr::str_to_title(SurgerySide),
  SerialDate = round(
    as.numeric(difftime(SurgeryDate,as.Date("1899-12-30"),
                        units = "days"))
    ),
  TempIDFull = paste0(PatientID,SurgerySide,SerialDate,sep = ""),
  TempIDPart = paste0(PatientID,SurgerySide,sep = ""),
    ) %>% dplyr::select(
      -(c(
        Joint
        ))
      )

```

```{r}
#| label: hospital-recode
#| echo: false

Hospital3a <- Hospital3 %>% mutate(
  CONSULTANT2 = case_when(
    CONSULTANT == "Donley" ~ "Doneley",
    CONSULTANT == "Mclean" ~ "McLean",
    CONSULTANT == "Davis" ~ "Davies",
    .default = CONSULTANT)
  ) %>% mutate(
    ConsultantRecode = case_when(
      CONSULTANT2 == "Bell"  ~ "A",
      CONSULTANT2 == "Fitzpatrick"  ~ "B",
      CONSULTANT2 == "Meta"  ~ "C",
      CONSULTANT2 == "Calabro"  ~ "D",
      CONSULTANT2 == "McLean"  ~ "E",
      CONSULTANT2 == "Balendra"  ~ "F",
      .default = "G"
      )
  ) %>% dplyr::select(
      -(c(
        CONSULTANT,
        CONSULTANT2
        ))
      )

```

An initial grouping was constructed to organise the mastersheet for manual verification. Updated groupings as per description in section 4c of [Protocol](https://docs.google.com/document/d/1AkPAvu0a9wtJMC24GHEuPlU_0duDvfvz/edit?usp=sharing&ouid=109449971782917707335&rtpof=true&sd=true "HREC protocol").

-   Surgeons confirmed to be contributing to the SHARKS registry and using the implant associated with the RAS - "RAS";

-   Surgeons confirmed to be contributing to the SHARKS registry and *not* using the implant associated with the RAS - "Pre-RAS";

-   Surgeons confirmed *not* to be contributors to the SHARKS registry, but using the implant associated with the RAS system - Group 1b (potential RAS cases)

-   All other cases - "Non-RAS"

```{r}
#| label: Update-grouping
#| echo: true


Hospital4 <- Hospital3a %>% mutate(
  Group = case_when(
  (ConsultantRecode == "A" | ConsultantRecode == "B" | ConsultantRecode == "C")  & Device == "Persona"  ~ "RAS",
    (ConsultantRecode == "A" | ConsultantRecode == "B" | ConsultantRecode == "C")  & Device != "Persona"  ~ "Pre-RAS",
  (ConsultantRecode == "D" | ConsultantRecode == "E" | ConsultantRecode == "F" | ConsultantRecode == "G") & Brand == "Zimmer" & Device == "Persona"  ~ "Possible-RAS",
  .default = "Non-RAS"
)
)
```

### SHARKS Snapshot and Export

A registry snapshot from SHARKS was retrieved (date 16-Nov-2023) and imported as described above. The SHARKS registry is a clinical quality registry embedded in the department of orthopaedics, with contributions from the physiotherapy department [@Lee2020], registered on the ANZ clinical trials register (ACTRN12617001161314) and with appropriate HREC approval (HREC/16/QPAH/732) for the collection of patient-reported outcomes and contextual information (pathology, patient characteristics, treatment) for knee arthroplasty within the hospital. The SHARKS registry snapshot was read in the method described above.


A function was generated to retrieve files using the *googledrive* package, to call on later in the analysis for processing data imports.

```{r}
#| label: folder
#| echo: false

base_folder_id1 <- "10PC4-TOygmM55QyC3GDjZ3EiYtO1akFw"


```

```{r}
get_specific_snapshot <- function(folder_name, base_folder_id = base_folder_id1) {
  tryCatch({
    # Check if the folder exists in the base directory
    folder <- googledrive::drive_ls(as_id(base_folder_id), pattern = paste0("^", folder_name, "$"))
    
    if(nrow(folder) == 0) {
      stop(paste("Folder", folder_name, "not found"))
    }
    
    # Find the snapshot file in the specified folder
    snapshot_file <- googledrive::drive_ls(
      folder$id, 
      pattern = "Registry data snapshot\\.xlsx$"
    )
    
    if(nrow(snapshot_file) == 0) {
      stop("No snapshot file found in specified folder")
    }
    
    # Return both pieces of information as a list
    return(list(
      snapshot = snapshot_file,
      folder_name = folder$name
    ))
    
  }, error = function(e) {
    stop(paste("Error finding specified snapshot:", e$message))
  })
}
```

```{r}
#| lable: snapshot-setup
#| echo: false


CurrentDate <- as.character("20231116")

FileLoc1 <- paste0("G:\\My Drive\\EBMA\\Client Drive\\QEII Jubilee\\QEII Shared Folder\\Registry Snapshots\\",CurrentDate,"\\KneeArthritis data snapshot.xlsx")
```

```{r}


SHARKSSnapshot1 <- readxl::read_xlsx(
  path = FileLoc1,
  sheet = "AllTimePoints",
  col_names = TRUE
  ) %>% mutate(
    SurgerySide = stringr::str_to_title(SurgerySide),
  SerialDate = round(
    as.numeric(difftime(SurgeryDate,as.Date("1899-12-30"),
                        units = "days"))
    )
) %>% dplyr::select(
      !(
        c(
        Lastname,
        Firstname,
        Email
        )
        ) 
      ) %>% unite(
    "TempIDPart",
    c(
    "PatientID",
    "SurgerySide"
    ),
    remove = FALSE,
    na.rm = TRUE,
    sep = ""
) %>% unite(
    "TempIDFull",
    c(
    "PatientID",
    "SurgerySide",
    "SerialDate"
    ),
    remove = FALSE,
    na.rm = TRUE,
    sep = ""
) %>% relocate(
  c(TempIDFull,TempIDPart),
  .before = PatientID
)
```

```{r}
#| label: snapshot-recode
#| echo: false


SHARKSSnapshot <- SHARKSSnapshot1 |> dplyr::mutate(
ConsultantRecode = case_when(
      str_detect(Surgeon,"Bell")  ~ "A",
    str_detect(Surgeon,"Fitzpatrick")  ~ "B",
      str_detect(Surgeon,"Meta")  ~ "C",
      str_detect(Surgeon,"Calabro")  ~ "D",
      str_detect(Surgeon,"McLean")  ~ "E",
      str_detect(Surgeon,"Balendra")  ~ "F",
      .default = "G")
)

```

```{r}
#| echo: false
CurrentDate2 <- as.character("2024-06-11")

FileLoc2 <- paste0("G:\\My Drive\\EBMA\\Client Drive\\QEII Jubilee\\EBMA Working\\Registry Custodian\\Data Quality auditing and reporting\\Auditing\\DataSource\\Socrates\\",CurrentDate2,"\\KneeArth1.txt")
```

```{r}



SHARKSSoc2 <- readr::read_delim(
  file = FileLoc2,
  col_names = TRUE,
   guess_max = 25,
 col_select = (-c(11,23)
                ),
  name_repair = ~stringr::str_replace_all(str_to_title(.)," |\\\\","")
  )


```

### Vendor report - RAS Activity

A report from the RAS vendor was extracted and stored in an xlsx file and imported into the analysis as described above. The vendor report was read in as an input into the analysis and temporary identifiers were created as described.

```{r}
#| echo: false

FileLoc3 <- paste0("G:\\My Drive\\EBMA\\Client Drive\\QEII Jubilee\\EBMA Working\\Publications\\Early Outcomes of Robotic Arthroplasty\\Client Material\\QEII TKR ROSA Reports.xlsx")

```

```{r}
#| label: vendor-report

VendorReport <- readxl::read_xlsx(
  path = FileLoc3,
  sheet = "Sheet1",
  col_names = TRUE
  ) %>% rename(
    SurgeryDate = "Surgery Date",
    CONSULTANT = "Surgeon name",
    Description = "Surgery Description",
    PatientID = "Patient",
    SurgerySide = "Left/Right desc."
    ) %>% mutate(
  SerialDate = round(
    as.numeric(difftime(SurgeryDate,as.Date("1899-12-30"),
                        units = "days"))
    ),
  SurgeryType = case_when(
    grepl("revision",Description,ignore.case = TRUE) ~ "Revision",
    .default = "Primary"
  ),
  URN = purrr::map_chr(stringr::str_extract_all(PatientID, "\\d+"),~ str_c(.x[1])),
  SurgerySide = stringr::str_to_title(SurgerySide)
) %>% mutate(
  URN2 = case_when(
  str_count(str_extract(URN,"\\d+")) == 5 ~ paste0("0",URN),
    str_count(str_extract(URN,"\\d+")) == 4 ~ paste0("00",URN),
  .default = URN
  )
) %>% unite(
    "TempIDPart1",
    c(
      "SurgerySide",
      "SerialDate"
      ),
    remove = FALSE,
    na.rm = TRUE,
    sep = ""
) %>% unite(
    "TempIDPart",
    c(
    "URN2",
    "SurgerySide"
    ),
    remove = FALSE,
    na.rm = TRUE,
    sep = ""
) %>% unite(
    "TempIDFull",
    c(
    "URN2",
    "SurgerySide",
    "SerialDate"
    ),
    remove = FALSE,
    na.rm = TRUE,
    sep = ""
)

```

Surgeon names were recoded

```{r}
#| echo: false
VendorReport1 <- VendorReport %>% dplyr::mutate(
  ConsultantRecode = case_when(
  grepl("Bell",CONSULTANT)  ~ "A",
  grepl("FitzPatrick",CONSULTANT)  ~ "B",
  grepl("Meta",CONSULTANT) ~ "C",
  grepl("Calabro",CONSULTANT)  ~ "D",
  grepl("McLean",CONSULTANT)  ~ "E",
  grepl("Balendra",CONSULTANT)  ~ "F",
      .default = "G")
)

```

```{r}
VendorExclusions <- VendorReport1 %>% filter(
  is.na(URN)
) %>% mutate(
  Exclusion = case_when(
    str_detect(str_to_lower(Description),"canc*|revis*|demo|washout") ~ "Possible",
    str_detect(PatientID,"TBC") ~ "Possible",
    .default = "Unlikely"
  )
)
```

Data sources were crossmatched using one of the temporary identifier columns with partial information (URN and surgery side) as surgery date differed between sources for a proportion of cases.

```{r}

Snapshot1 <- SHARKSSnapshot %>% dplyr::select(
  TempIDFull,
  TempIDPart,
  SerialDate,
  PatientID,
  SurgeryType,
  SurgerySide,
  ConsultantRecode,
  SurgeryDate,
  SurgeryStatus
)

CombinedInputs = bind_rows(
  list(Hospital = Hospital3a,
       SHARKS = Snapshot1,
       Vendor = VendorReport1 %>% anti_join(.,
                                           VendorExclusions,
                                           by = "TempIDPart")
       ), 
  .id = "Source"
  )

MasterList <- CombinedInputs %>% dplyr::select(
  PatientID,
  URN,
  TempIDFull,
  TempIDPart,
  Source,
  ConsultantRecode,
  SurgeryDate,
  SerialDate,
  SurgerySide,
  SurgeryType
  ) %>% mutate(
    PatientID2 = ifelse(is.na(URN),PatientID,URN)
  ) %>% group_by(
    TempIDFull
  ) %>% mutate(
    Entry = row_number()
  ) %>% arrange(
    Source,
    .by_group = TRUE
  ) 

MasterList2 <- slice_min(
  MasterList,
  Entry,
  n = 1
  ) %>% filter(
    !is.na(PatientID2)
  )

```

### Chart Review 1

<!--# Come back and correct this to insert a half-decent flow chart -->

A consolidated list of cases were written to a web-based file using the *googlesheets4* package (v`{r} utils::packageVersion("googlesheets4")`) [@googlesheets4] for manual verification of analysis inclusion, as well as grouping inputs (see STROBE 6). Chart review of an integrated electronic medical records system (Cerner, USA) was performed by two of the authors (JB; FL) with assistance by a third (MS). The first round of chart review confirmed inclusion criteria and grouping (defined below) for each record.

```{r}
#| label: write-master
#| code-summary: "write to mastersheet"
#| warning: false
#| eval: false

# Authenticate for sheets using the same token
gs4_auth(token = googledrive::drive_token())

googlesheets4::sheet_write(
  ss = SheetIDs$MasterList,
  data = Hospital4,
  sheet = "ConsolidList")


```

### Chart Review 2

The initial consolidated case list was re-imported back into R and reprocessed and a new MasterSheet (v3) was re-written back into the web-based master file. Within this table additional columns were added and formulae were written to apply certain criteria to establish the inclusion and grouping columns (see below) with the following criteria;

-   Revision arthroplasty \| Reoperation \| Not a total knee replacement \| unconfirmed surgery type

-   Not eligible for 3month followup (Surgery Date \>= 1-Mar-2023)

-   Case existence could be verified across at least two sources

The mastersheetv3 was split into separate tables for further chart review by the authors.

::: {#tbl-chartreview}
+---------------------+------------------------------+----------------------+
| **Patient Details** | **Surgical 1**               | **Surgical 2**       |
+---------------------+------------------------------+----------------------+
| ProgressIndicator   | Surgeon                      | Pathology            |
+---------------------+------------------------------+----------------------+
| ProgressComment     | SurgerySide                  | AlignmentReferencing |
+---------------------+------------------------------+----------------------+
| ComplicationForm    | Group                        | SoftTissueRelease    |
+---------------------+------------------------------+----------------------+
| Height              | BilateralStatus              | FemurBrand           |
+---------------------+------------------------------+----------------------+
| Weight              | SimultaneousBilateralSurgery | FemurFixation        |
+---------------------+------------------------------+----------------------+
| Comorbidities       | Surgery_ProcedureName        | FemoralSize          |
+---------------------+------------------------------+----------------------+
| DateOfInitialExam   | Operator                     | TibiaBrand           |
+---------------------+------------------------------+----------------------+
| PatientID           | Approach                     | TibiaFixation        |
+---------------------+------------------------------+----------------------+
| MockUpID            | Anaesthetic                  | TibialSize           |
+---------------------+------------------------------+----------------------+
| SurgeryDate         | TourniquetType               | InsertThickness      |
+---------------------+------------------------------+----------------------+
| Sex                 | Operation Start Time         | PatellaIntervention  |
+---------------------+------------------------------+----------------------+
| DateofBirth         | Operation Finish Time        | PatellaType          |
+---------------------+------------------------------+----------------------+
|                     |                              | PatellaSize          |
+---------------------+------------------------------+----------------------+
|                     |                              | Constraint           |
+---------------------+------------------------------+----------------------+

Chart Review Variables Group Pre-RAS and Non-RAS
:::

A [web-based form](https://questionpro.com.au/t/ARnFiZRugR "Complications capture form") (QuestionPro, USA) was generated to capture key details of adverse events and complications occurring within the surgery (intraoperative) and up to 90 days postoperatively. The patient URN was used to link the information captured in the forms to the mastersheet.

### Analysis - Inputs

Master tables were read in with preliminary group labelling.

```{r}

#The original mastersheet should be kicking around the code blocks further up

# Authenticate for sheets using the same token
gs4_auth(token = googledrive::drive_token())

#Groups RAS (1) and Pre-RAS (2) (Preliminary labelling)
G1and2 <- read_sheet(
ss = SheetIDs$MasterList,
sheet = "ChartReviewG1-2v2",
col_names = TRUE,
col_types = "ccccnncDccDccccccccccccccccccccccccctt",
trim_ws = TRUE
)



#Groups Potential-RAS (1b) and Non-RAS (3) (Preliminary labelling)
G1band3 <- read_sheet(
ss = SheetIDs$MasterList,
sheet = "ChartReviewG1b-3",
col_names = TRUE,
col_types = "cccnncDccDccccccccccccccccccccccccttcD",
trim_ws = TRUE
)

```

Complication form entries were read in as one table.

```{r}

# Authenticate for sheets using the same token
gs4_auth(token = googledrive::drive_token())

ComplicResponse <- read_sheet(
ss = SheetIDs$ComplicEntry,
           sheet = "ComplicROSARaw",
           col_names = TRUE,
           col_types = "cccTliicccDccccccccccccccccDccD",
           trim_ws = TRUE)
```

```{epoxy}

The mastersheet tables returned a combined {nrow(G1and2) + nrow(G1band3)} records, with {nrow(ComplicResponse)} complication responses filed. The snapshot contained {nrow(SHARKSSnapshot)} records for crossmatching to import patient-reported outcomes. 

```

### Prepare dataset

The dataset was prepared for further analysis through creating new variables, recoding existing variables and merging between tables as required.

```{r}
#| label: process-table-1A

G1and2_1A <- G1and2 %>% select(!(ComplicationForm)) %>% 
  mutate(
    GroupUpdated = case_when(
      Group == 1 ~ "RAS",
      Group == 2 ~ "Pre-RAS"
    ),
    SurgerySide = stringr::str_to_title(SurgerySide),
    BilateralStatus2 = case_when(
      BilateralStatus == "Bilateral" & SimultaneousBilateralSurgery == "Yes" ~ "Simultaneous",
      BilateralStatus == "Bilateral" & is.na(SimultaneousBilateralSurgery) ~ "Staged",
      .default = "Unilateral"
        ),
  BMI = Weight / ((Height/100)*(Height/100)),
    PotentialExclus = case_when(
    stringr::str_detect(str_to_lower(ProgressComment),"unicomp*|done|duplicate|hip|exclude|iemr" ) ~ "Yes",
    .default = "No"
  ),
  PotentialComp = case_when(
    stringr::str_detect(str_to_lower(ProgressComment),"convert*|track*|align*|rosa" ) & (Group == "1"|Group == "1b") ~ "Yes",
    .default = "No"
  ),,
  GroupCheck = case_when(
      (GroupUpdated == "RAS" & AlignmentReferencing == "Robotic")|(Group != "RAS" & AlignmentReferencing != "Robotic") ~ "Correct",
      .default = "Incorrect"
        )
  ) 

```

Surgeon names were recoded and duplicate records removed.

```{r}
#| label: process-table-1B
#| echo: false

G1and2_1B <- G1and2_1A %>% dplyr::mutate(
  Surgeon2 = case_when(
      grepl("Bell",Surgeon) ~ "A",
      grepl("Meta",Surgeon) ~ "B",
      grepl("Fitzpatrick",Surgeon) ~ "C"
        )
) %>% dplyr::select(
    !(Surgeon)
    ) %>% rename(
      Surgeon = "Surgeon2"
      ) %>% filter( #See comment in STROBE [13] - duplicate input record
        !(MockUpID == "157031Left44551")
      )


```

```{r}
#| label: process-table-2

G1band3_1 <- G1band3 %>% select(!(ComplicationForm)) %>% mutate(
  GroupUpdated = case_when(
    Group == "3" ~ "Non-RAS",
    Group == "1b" ~ "Potential-RAS"
  ),
  SurgerySide = stringr::str_to_title(SurgerySide),
    BilateralStatus2 = case_when(
      BilateralStatus == "Bilateral" & SimultaneousBilateralSurgery == "Yes" ~ "Simultaneous",
      BilateralStatus == "Bilateral" & is.na(SimultaneousBilateralSurgery) ~ "Staged",
      .default = "Unilateral"),
    BMI = Weight / ((Height/100)*(Height/100)),
    PotentialExclus = case_when(
    stringr::str_detect(str_to_lower(ProgressComment),"unicomp*|done|duplicate|hip|exclude|iemr" ) ~ "Yes",
    stringr::str_detect(str_to_lower(ProgressComment),"lcck|depuy|lcs|rhk" ) & (Group == "1"|Group == "1b") ~ "Yes",
    .default = "No"
  ),
  PotentialComp = case_when(
    stringr::str_detect(str_to_lower(ProgressComment),"convert*|track*|align*|rosa" ) & (Group == "1"|Group == "1b") ~ "Yes",
    .default = "No"
  ),
    GroupCheck = case_when(
      (GroupUpdated == "Potential-RAS" & AlignmentReferencing == "Robotic")|(Group != "Potential-RAS" & (AlignmentReferencing != "Robotic")|is.na(AlignmentReferencing)) ~ "Correct",
      .default = "Incorrect"
      ),
    AgeAtSurgery = as.numeric(as.duration(interval(ymd(DOB), ymd(SurgeryDate))),"years"),
      Sex = case_when(
        Sex == "M" ~ "Male",
        Sex == "F" ~ "Female",
        .default = NA_character_
      )
  )

```

Individual input tables were joined into a MasterSheet and additional variables created as needed.

```{r}
#| label: mastersheet-1


MasterSheet1 <- bind_rows(
  G1band3_1,
  G1and2_1B
) %>% dplyr::select(
  -Process
) %>% mutate(
  SerialDate = round(
    as.numeric(difftime(SurgeryDate,as.Date("1899-12-30"),
                        units = "days"))),
  across(where(is.character) & !c(MockUpID,GroupUpdated), ~str_to_title(.)), #this line turns all side labels in "MockUpID" into lower case; no longer matches to TempIDFull in MasterList
  PatientID2 = case_when(
    str_count(PatientID) == 5 ~ paste0("0",PatientID),
    str_count(PatientID) == 4 ~ paste0("00",PatientID),
    .default = PatientID
  )
  ) %>% unite(
    "TempIDFull",
    c("PatientID2",
      "SurgerySide",
      "SerialDate"
    ),
    remove = FALSE,
    na.rm = TRUE,
    sep = ""
  ) %>% unite(
    "TempIDPart",
    c("PatientID2",
      "SurgerySide"
    ),
    remove = FALSE,
    na.rm = TRUE,
    sep = ""
  ) %>% relocate(
    PotentialExclus
  )

```

Identifier columns were reviewed for coherence.

```{r}
# Assuming your dataframe is called 'df' and the two identifier columns are 'id1' and 'id2'

# Step 1: Create a new column that flags mismatches
MasterSheetCheck <- MasterSheet1 %>%
  mutate(id_mismatch = MockUpID != TempIDFull)

# Step 2: View all rows with mismatches
mismatched_rows <- MasterSheetCheck %>%
  filter(id_mismatch == TRUE)

# Step 3: Print the number of mismatches
print(paste("Number of mismatches:", nrow(mismatched_rows)))

# Step 4: View the mismatched rows
print(mismatched_rows)

# Optional: If you want to see only the identifier columns and a few others
mismatched_ids <- mismatched_rows %>%
  select(MockUpID, TempIDFull)
print(mismatched_ids)
```

The mastersheet was checked for duplicate records.

```{r}
# Check for duplicates

MasterDuplicates <-MasterSheet1 %>% 
    summarise(
    n = n(),
    .by = "TempIDPart"
  ) %>% filter(
    n > 1
  )



```

```{r}
#| label: tbl-inputlabel
#| tbl-cap: "Summary of input variables used to determine group labelling."

Table3 <- tbl_summary(
  MasterSheet1 %>% dplyr::select(
    GroupUpdated,
    Surgeon,
    SurgeryDate,
    SurgerySide,
    AlignmentReferencing
  ),
  by = GroupUpdated,
  statistic = list(
    SurgeryDate = "{min} - {max}"
  )
) %>% add_overall()

as_flex_table(Table3) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )
```

```{r}

SerialG1Start <- as.numeric(difftime(as.Date("2021-02-19"),as.Date("1899-12-30")))

VendorExclusions2 <- VendorExclusions %>% filter(
  Exclusion == "Possible"
)

MasterSheet2 <- MasterSheet1 %>% filter(
  PotentialExclus != "Yes"
  ) %>% mutate(# fix a couple of uncertain groupings
    AlignmentReferencing = case_when(
      MockUpID == "2045744Left44895" ~ "Robotic",
      MockUpID == "267722left44743" ~ "Robotic",
      .default = AlignmentReferencing
    ) 
  ) %>% mutate(
    GroupCorrected = case_when(
  (AlignmentReferencing == "Robotic") | (is.na(AlignmentReferencing) & (TempIDPart %in% VendorReport$TempIDPart)) ~ "RAS",
GroupUpdated == "Pre-RAS" | (GroupUpdated == "RAS" & !is.na(AlignmentReferencing) & AlignmentReferencing != "Robotic") ~ "Pre-RAS",
GroupUpdated == "RAS" & is.na(AlignmentReferencing) & !(TempIDPart %in% VendorReport$TempIDPart) ~ "Pre-RAS",
GroupUpdated == "Non-RAS" | (GroupUpdated == "Potential-RAS" & !is.na(AlignmentReferencing) & AlignmentReferencing != "Robotic") ~ "Non-RAS",
  .default = "Non-RAS"
    )
) %>% arrange(
  SurgeryDate
  ) %>% relocate(
    GroupCorrected,
    .after = Group
  )
```

```{r}
#| label: Exclusions

MasterSheetExclusions <- MasterSheet1 %>% filter(
  PotentialExclus == "Yes"
)

Unsure <- MasterSheet2 %>% filter(
  is.na(AlignmentReferencing)
)

```

The complication response table was filtered for entries missing a patient record identifier.

```{r}

#Had to add a filter on missing PatientIDs (URNs) in the ComplicResponse table as the mutate function str_count would not work with NAs passed as input. 
ComplicResponse2 <- ComplicResponse %>% filter(
    !is.na(URN)
    )

```

A list of records in the MasterSheet missing at least one complication form entry were extracted for manual review.

```{r}

MissingComplic <- MasterSheet2 %>% filter(
  !(PatientID %in% ComplicResponse2$URN)
)

```

```{r}
#| label: write-complications
#| echo: false
#| eval: false

sheet_write(MissingComplic, ss = "https://docs.google.com/spreadsheets/d/1Nk4i8g65C-i7-24KJdBoMn7QwGrkoYA88l5V45b47Wk/edit", sheet = "ComplicOutStanding")

```

```{epoxy}

There are currently {nrow(MissingComplic)} treatment records that have not got any complication entries against them in the mastersheet

```

The SHARKS snapshot was used to update demographic data (age, sex, body mass index) for cases in the MasterSheet that were not retrieved during chart review.

```{r}
# Create MockUpID; concatenate PatientID, Side and SurgeryDate

SHARKSSnapshot1 <- SHARKSSnapshot %>% mutate(
  SurgerySide = stringr::str_to_title(SurgerySide)
) %>% unite(
  "TempIDFull",
  c(PatientID,SurgerySide,SerialDate),
  remove = FALSE,
  na.rm = FALSE,
  sep = ""
  ) %>% unite(
    "TempIDPart",
    c(PatientID,SurgerySide),
    remove = FALSE,
    na.rm = FALSE,
    sep = ""
    )

MasterSheet3 <- MasterSheet2 %>% left_join(
    .,
    SHARKSSnapshot1 %>% filter(
      SurgeryType == "Primary"
      ) %>% dplyr::select(
        TempIDPart,
        AgeAtSurgery,
        Gender,
        BMI
        ) %>% rename(
          Sex = "Gender"
          ),
    join_by("TempIDPart" == "TempIDPart")
    ) %>% mutate(
      Sex = ifelse(
        is.na(Sex.x),Sex.y,Sex.x
        ),
      AgeAtSurgery = ifelse(
        is.na(AgeAtSurgery.x),
        AgeAtSurgery.y,
        AgeAtSurgery.x
        ),
      BMI = ifelse(
        is.na(BMI.x),BMI.y,BMI.x
        )
      ) %>% dplyr::select(
        -(ends_with(".x")
          )
        ) %>% dplyr::select(
          -(ends_with(".y")
            )
          )


```

The reduction in missing data was confirmed before and after the table merge to verify the successful table join using the *naniar* package (v`{r} utils::packageVersion("naniar")`) [@naniar].

```{r}
#| label: fig-missing
#| fig-cap: "Missingness in AgeatSurgery and Sex before (top) and after (bottom) merge between MasterSheet and SHARKS Snapshot."



FigureMiss1 <- gg_miss_var(MasterSheet2 %>% dplyr::select(
  AgeAtSurgery,
  Sex
),
show_pct = TRUE
) + theme_bw() 

FigureMiss2 <- gg_miss_var(MasterSheet3 %>% dplyr::select(
  AgeAtSurgery,
  Sex
),
show_pct = TRUE
) + theme_bw() 

FigureMiss1 / FigureMiss2
```

## STROBE \[6\] Participants:

*Critique the definition of the study population, including inclusion and exclusion criteria.*

### IDEAL Stage2b \[2\]: Inclusion-criteria

*Observational studies should be diagnosis-based, rather than procedure-based whenever possible*

The criteria for this study was procedure based - examining only cases that received a total knee replacement within the department. Inclusion criteria was confirmed by establishing the following during *chart review* (rounds 1 and 2);

-   Date of Surgery \< **1-Mar-2023**

-   Surgery type (arthroplasty)

Exclusion criteria included;

-   Revision \| Reoperation \| Procedure other than knee arthroplasty \| Arthroplasty type (revision vs primary) could not be confirmed

## STROBE \[7\] Variables:

*Evaluate the choice of exposure, outcome, and confounding variables.*

### Exposure variables

Group labels

Grouping information was confirmed by chart review for the following additional variables;

-   Consultant surgeon

-   Date of Surgery

-   Alignment delivery (robotic, navigation, manual instrumentation)

-   Prosthesis system implanted

Following chart review 1, further processing was performed to confirm the grouping for each record included in the analysis.

-   Create corrected group label (1, 2, 3)

-   Identify SHARKS and non-SHARKS cases (establish expectation of PROMs availability)

-   Assess availabilty of complications data

The initial state of the grouping variables was tabled using *gtsummary* (v`{r} utils::packageVersion("gtsummary")`) [@gtsummary] to ensure that the patterns were as expected.

```{r}
#| label: tbl-groupinputs
#| tbl-cap: "Summary of grouping inputs separated by estimated grouping."

Table4 <- tbl_summary(
  MasterSheet3 %>% dplyr::select(
    GroupCorrected,
    Surgeon,
    SurgeryDate,
    SurgerySide,
    AlignmentReferencing,
    AgeAtSurgery,
    Sex,
    SurgerySide
  ),
  by = GroupCorrected,
  statistic = list(SurgeryDate ~ "{min} - {max}")
) %>% add_overall()

knitr::knit_print(Table4)

```

The surgical fields were adjusted one at a time using a combination of *tidyverse* (v`{r} utils::packageVersion("tidyverse")`) [@tidyverse] and *stringr* (v`{r} utils::packageVersion("stringr")`) [@stringr] packages. The initial state of the surgical fields was tabled using *gtsummary.*

```{r}
#| label: tbl-surgicaldetails
#| tbl-cap: "Summary of unadjusted surgical fields separated by estimated grouping."

Table5 <- tbl_summary(
  MasterSheet3 %>% dplyr::select(
    GroupCorrected,
    BilateralStatus2,
    Surgery_ProcedureName:FemurFixation,
    TibiaFixation,
    PatellaIntervention,
    Constraint
  ),
  by = GroupCorrected
) %>% add_overall()

as_flex_table(Table5) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )
  
```

```{r}

MasterSheet4 <- MasterSheet3 %>% mutate(
  Approach2 = case_when(
    str_detect(Approach,"Lat") ~ str_replace(Approach,"\\bLat\\b","Lateral"),
    str_detect(Approach,"Med") ~ str_replace(Approach,"\\bMed\\b","Medial"),
    str_detect(Approach,"Snip") ~ "Other",
  .default = Approach
),
FemurBrand2 = case_when(
  str_detect(str_to_lower(FemurBrand),"attune") ~ "Attune",
  str_detect(str_to_lower(FemurBrand),"nexgen") ~ "Nexgen",
  str_detect(str_to_lower(FemurBrand),"persona") ~ "Persona",
  str_detect(str_to_lower(FemurBrand),"genesis") ~ "Genesis",
  str_detect(str_to_lower(FemurBrand),"triathlon") ~ "Triathlon",
  str_detect(str_to_lower(FemurBrand),"rhk") ~ "RHK",
  .default = NA_character_
),
Operator2 = case_when(
  Operator == "Surgeon" ~ "Consultant",
  str_detect(Operator,"Registrar") ~ "Resident",
  .default = NA_character_
),
Anaesthetic2 = case_when(
  str_detect(Anaesthetic,"\\bGa\\b") ~ str_replace(Anaesthetic,"\\bGa\\b","General"),
  str_detect(Anaesthetic,"Spinal, Ga") ~ str_replace(Anaesthetic,"Spinal, Ga","General, Spinal"),
  str_detect(Anaesthetic,"Spnial") ~ str_replace(Anaesthetic,"Spnial","Spinal"),
  str_detect(Anaesthetic,"Spinal \\+ Sedation") ~ str_replace(Anaesthetic,"Spinal \\+ Sedation","Spinal, Sedation"),
  .default = Anaesthetic
),
Anaesthetic3 = case_when(
  str_detect(Anaesthetic2,"Spinal, General") ~ str_replace(Anaesthetic,"Spinal, General","General, Spinal"),
  str_detect(Anaesthetic2,"Spinal, Regional, General") ~ str_replace(Anaesthetic,"Spinal, Regional, General","General, Regional Block, Spinal"),
  .default = Anaesthetic2
),
TourniquetType2 = case_when(
    str_detect(TourniquetType,"Intemittent") ~ str_replace(TourniquetType,"\\bIntemittent\\b","Intermittent"),
    .default = TourniquetType
),
FemurFixation2 = case_when(
  str_detect(FemurFixation,"Cemented") ~ str_replace(FemurFixation,"\\bCemented\\b","Cement"),
  str_detect(FemurFixation,"Uncemented") ~ str_replace(FemurFixation,"\\bUncemented\\b","Cementless"),
    .default = FemurFixation
),
TibiaFixation2 = case_when(
  str_detect(TibiaFixation,"Cemented") ~ str_replace(TibiaFixation,"\\bCemented\\b","Cement"),
  str_detect(TibiaFixation,"Uncemented") ~ str_replace(TibiaFixation,"\\bUncemented\\b","Cementless"),
    .default = TibiaFixation
),
Constraint2 = case_when(
  str_detect(Constraint,"Crutiate") ~ str_replace(Constraint,"\\bCrutiate\\b","Cruciate"),
  str_detect(Constraint,"Substituting|Substituing|Sacrificing|(Cruciate Stabilised)") ~ "Posterior Stabilised",
  Constraint == "Lcck" ~ "Constrained Condylar",
  str_detect(Constraint,"Dish|Mc|Rhk|Mobile|Ts") ~ "Other",
  .default = Constraint
),
ComorbidSmoke = case_when(
  Comorbidities == "Nil" ~ "No",
  is.na(Comorbidities) ~ NA_character_,
  grepl("smoke*|active.smoke*",Comorbidities,ignore.case = TRUE) ~ "Yes",
  .default = "No"
  ),
ComorbidDiabetes = case_when(
  Comorbidities == "Nil" ~ "No",
  is.na(Comorbidities) ~ NA_character_,
  grepl("\\bt2dm\\b",Comorbidities,ignore.case = TRUE) ~ "Yes",
  .default = "No"
  ),
  ComorbidBone = case_when(
   Comorbidities == "Nil" ~ "No",
           is.na(Comorbidities) ~ NA_character_,
           grepl("osteoporosis|osteomyelitis|paget*",Comorbidities,ignore.case = TRUE) ~ "Yes",
           .default = "No"
         ),
    ComorbidAutoImmune = case_when(
    Comorbidities == "Nil" ~ "No",
     is.na(Comorbidities) ~ NA_character_,
     grepl("psoria.*arthrit*|inflamm*.*arthrit*|\\bra\\b",Comorbidities,ignore.case = TRUE) ~ "Yes",
  grepl("psoriasis*|sjogren",Comorbidities,ignore.case = TRUE) ~ "Yes",
    grepl("polymyalgia rheumatica*|sarcoidosis",Comorbidities,ignore.case = TRUE) ~ "Yes",
    .default = "No"
    ),
  ComorbidCancer = case_when(
  Comorbidities == "Nil" ~ "No",
  is.na(Comorbidities) ~ NA_character_,
  grepl("\\bca\\b|lymphom*",Comorbidities,ignore.case = TRUE) ~ "Yes",
   .default = "No"
         ),
  ComorbidCardiovascular = case_when(
  Comorbidities == "Nil" ~ "No",
  is.na(Comorbidities) ~ NA_character_,
   grepl("stroke|\\bihd\\b|\\btia\\b|\\baf\\b|cardiac|cardio*",Comorbidities,ignore.case = TRUE) ~ "Yes",
   .default = "No"
   ),
  ComorbidNeuro = case_when(
   Comorbidities == "Nil" ~ "No",
   is.na(Comorbidities) ~ NA_character_,
   grepl("palsy",Comorbidities,ignore.case = TRUE) ~ "Yes",
   .default = "No"
  ),
  OpDelay = as.numeric(difftime(SurgeryDate,DateOfInitialExam,units = "weeks")) 
  ) %>%
  dplyr::select(!(c("Height","Weight","Comorbidities"))
) %>% dplyr::select(
  -Approach
) %>% relocate(
  Approach2,
  .after = Operator
)


```

```{r}
#| label: tbl-surgicaladjusted
#| tbl-cap: "Summary of surgical fields by group after initial adjustment."

Table6 <- tbl_summary(
  MasterSheet4 %>% dplyr::select(
    SurgerySide,
    GroupCorrected,
    BilateralStatus2,
    Surgery_ProcedureName,
    Operator2,
    Approach2,
    Anaesthetic3,
    TourniquetType2,
    Pathology,
    AlignmentReferencing,
    SoftTissueRelease,
    FemurBrand2,
    FemurFixation2,
    TibiaFixation2,
    PatellaIntervention,
    Constraint2
  ),
  label = list(
    BilateralStatus2 ~ "Bilateral Status",
    Operator2 ~ "Operator",
    Approach2 ~ "Approach",
    Anaesthetic3 ~ "Anaesthetic",
    TourniquetType2 ~ "Tourniquet Use",
    FemurBrand2 ~ "Femur Brand",
    FemurFixation2 ~ "Femur Fixation",
    TibiaFixation2 ~ "Tibia Fixation",
    Constraint2 ~ "Prosthesis Constraint"
  ),
  by = GroupCorrected
) %>% add_overall()

as_flex_table(Table6) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )
```

### IDEAL Stage2b \[3\] Outcomes

*A range of outcomes should be collected with standardised definitions*

#### Procedure Duration

Procedure start and end times were captured during Chart Review (2). Durations were calculated using *lubridate*.

```{r}

MasterSheet5 <- MasterSheet4 %>% rename(
  OperationStart = `Operation Start Time`,
  OperationFinish = `Operation Finish Time`
  ) %>% mutate(
  OperationStart = as.POSIXct(OperationStart, tz = "", format = "%Y-%m-%d %H:%M:%OS"),
  OperationFinish = as.POSIXct(OperationFinish, tz = "", format = "%Y-%m-%d %H:%M:%OS")) %>%
  mutate(ProcedureDuration = as.numeric(difftime(OperationFinish,OperationStart, units = "mins"))) 

```

Cases over 4 hours were retrieved for manual review.

```{r}
#| label: tbl-longduration
#| tbl-cap: "Individual case data for instances of procedure duration over 4 hours."

knitr::kable(MasterSheet5 %>%
                filter(ProcedureDuration >239) %>%
                dplyr::select(ProgressIndicator,
                              ProgressComment,
                              BilateralStatus,
                              ProcedureDuration,
                              PatientID,
                              SurgeryDate,
                              SurgerySide,
                              Surgeon,
                              Operator,
                              GroupCorrected) %>%
                arrange(GroupCorrected,Surgeon),
              format = "html")
```

After manual review, it was concluded that Increased operative time reflected bilateral cases, technical issues and intraoperative complications.

#### Adverse events

```{r}

ComplicResponse2a <- ComplicResponse2 %>% rename(
  PatientID = "URN"
)

MasterSheet5a <- MasterSheet5 %>%
  mutate(ComplicCount = sapply(seq_along(unlist(PatientID)), function(i) {
    sum(str_count(unlist(ComplicResponse2a$PatientID), unlist(PatientID)[i]))
  }))
```

Manually adjust data entry errors (dates). Calculate occurrence delay (DateSurgery -\> Date of Occurrence) and reoperation delay (DateSurgery -\> Reoperation Date). Flag any cases where the differences are extreme (negative, extreme positive).

<!--# code -->

```{r}


ComplicResponse3 <- ComplicResponse2a %>% rename_with(
  ~ str_replace_all(., " ", "")
) %>% filter(
  !(ComplicationOccurrence == "No")
) %>% mutate(
    ComplicationNature = str_replace(ComplicationNature,"#","fracture"),
    extracted_date = str_extract(ComplicationNature, "\\d{2}-(?:[A-Za-z]{3}|\\d{2})-\\d{4}"),
    parsed_date = parse_date_time(extracted_date, "d-b-Y")
) %>% mutate( #fix a couple of individual responses
    parsed_date = case_when(
      ResponseID == "5258200" ~ ymd("2019-09-27"),
      ResponseID == "5333794" ~ NA_POSIXct_,
      .default = parsed_date
    ),
    DateofOccurrence2 = if_else(
      !is.na(parsed_date), 
      parsed_date, 
      ymd(DateofOccurrence),
      NA_POSIXct_
    )
)

```

The free-text describing the nature of the complication or adverse event was pre-processed using *tidytext* (`{r} utils::packageVersion("tidytext")`) [@tidytext] to split into word tokens and remove stop words.

```{r}
Stop <- tibble(get_stopwords())

ComplicResponse4 <- tidytext::unnest_tokens(
  ComplicResponse3,
  output = Term,
  input = ComplicationNature,
  token = "words",
  format = "text",
  to_lower = TRUE,
  drop = FALSE
) %>% anti_join(
  Stop,
  by = c("Term" = "word")
) %>% mutate(
  TermLength = stringr::str_length(Term)
)

```

Terms with less than four characters were extracted and reproduced in an external file for manual spelling of abbreviations. Terms with digits (e.g. L5) were removed.

```{r}
# Retrieve terms less than 4 characters that likely need to be recast into full words

TargetTerms <- ComplicResponse4 %>% dplyr::select(
  ResponseID,
  Term
  ) %>% distinct(
  Term,
  .keep_all = TRUE
  ) %>% mutate(
    TermLength = stringr::str_length(Term)
    ) %>% filter(
     TermLength < 5 & stringr::str_detect(Term,"\\d",negate = TRUE)
  ) %>% arrange(
    Term
  )

```

```{r}
#| eval: false

# Commented out after first use
googlesheets4::range_write(
ss= "https://docs.google.com/spreadsheets/d/1Nk4i8g65C-i7-24KJdBoMn7QwGrkoYA88l5V45b47Wk/edit",
data = TargetTerms %>% dplyr::select(
  ResponseID,
  Term
),
sheet = "ComplicTerm",
range = paste0("A1:","B",nrow(TargetTerms)+1),
col_names = TRUE

)
```

The abbreviated terms with expanded definitions were read back into the workspace for replacement in the complication descriptions.

```{r}
# read in new terms

TargetTerms2 <- googlesheets4::range_read(
  ss= "https://docs.google.com/spreadsheets/d/1Nk4i8g65C-i7-24KJdBoMn7QwGrkoYA88l5V45b47Wk/edit",
  sheet = "ComplicTerm",
  range = "A1:C",
  col_names = TRUE,
  trim_ws = TRUE
) %>% mutate(
  TargetTerm = paste0("\\b",Term,"\\b")
)
```

The terms were replaced and added to the dataframe containing complication data.

```{r}

TargetTermsList <- str_c(TargetTerms2$TargetTerm, collapse = "|")

ReplaceTermFun <- function(String) {
  # Find the matched term in TargetTerms3
  match <- filter(TargetTerms2,
                  String == Term)
  
  # Check if a match is found
  if (nrow(match) ==1) {
    return(match$ReplaceTerm)
  } else {
    # Return the original string if no match is found
    return(String)
  }
}


```

```{r}

ComplicResponse5 <- ComplicResponse4 %>% mutate(
    Term1 = case_when(
      TermLength < 5 & str_detect(Term,"\\d", negate = TRUE) ~ str_replace_all(Term, TargetTermsList, ReplaceTermFun),
      .default = Term
      )
  ) %>% filter(
    str_detect(Term1,"\\d", negate = TRUE)
  )
  

```

A figure displaying term frequency was generated using *ggplot2* and formatted for reporting using *knitr*.

```{r}
#| label: fig-complicfreq
#| fig-cap: "Complication terms by frequency."

Figure3 <- ComplicResponse5 %>% filter(!Term1 == "treatment") %>%
  count(Term1, sort = TRUE) %>%
  filter(n > 3) %>%
  mutate(Term1 = reorder(Term1, n)) %>%
  ggplot(aes(n, Term1)) +
  geom_col() +
  labs(y = NULL)


knitr::knit_print(Figure3)
```

A wordcloud was generated using *wordcloud* (`{r} utils::packageVersion(pkg = "wordcloud")`) [@wordcloud] to express the most common terms in the complication description free text field.

```{r}
#| label: fig-complicfreq2
#| fig-cap: "Word cloud of terms appearing in the adverse event descriptions."


Figure4 <- ComplicResponse5 %>% filter(!Term1 == "treatment") %>%
  count(Term1) %>%
  with(wordcloud::wordcloud(Term1, n, max.words = 50))

knitr::knit_print(Figure4)
```

```{r}

#This code performs several operations:

# Initial Join:
# 
# Takes ComplicResponse3 and joins it with a summarized version of ComplicResponse5
# The summarization combines all Term1 values for each ResponseID into a single space-separated string
# 
# 
# Date Management:
# 
# Removes an old date column
# Renames DateofOccurrence2 to DateofOccurrence
# This suggests there was a date correction or update in the data
# 
# 
# Data Organization:
# 
# Sorts the data by PatientID and DateofOccurrence
# Creates a new identifier (TempIDPart) by combining PatientID and Side
# 
# 
# Master Data Integration:
# 
# Joins with selected columns from MasterSheet5a
# Uses a many-to-many relationship, meaning multiple rows can match on both sides
# Brings in SurgeryDate and GroupCorrected information
# 
# 
# Time Calculation:
# 
# Calculates the delay between surgery and occurrence dates
# Converts the dates using ymd() (assumes dates are in YYYY-MM-DD format)
# Expresses the time difference in days

ComplicResponse6 <- left_join(
  ComplicResponse3,
  ComplicResponse5 %>%
  group_by(
    ResponseID
    ) %>%
  summarize(
    Term2 = str_c(Term1, collapse = " ")
  ) %>% ungroup(),
  by = "ResponseID"
) %>% dplyr::select(
  -DateofOccurrence
) %>% rename(
  DateofOccurrence = "DateofOccurrence2"
) %>% arrange(
  PatientID,
  DateofOccurrence
) %>% mutate(
  TempIDPart = paste0(PatientID,Side)
) %>% left_join(
  .,
  MasterSheet5a %>% dplyr::select(
    TempIDPart,
    SurgeryDate,
    GroupCorrected
  ),
  by = "TempIDPart",
  relationship = "many-to-many"
) %>% mutate(
    OccurDelay = as.numeric(as.duration(interval(ymd(SurgeryDate), ymd(DateofOccurrence))),"days")
  )

```

Retrieve problem entries

```{r}
ComplicProblem <- ComplicResponse6 %>% filter(
  !(between(OccurDelay,0,365))
)
```

Data entry errors were corrected manually by shifting date of occurrence entries forward or backwards by years to align with the surgery date appropriately. Regular expressions were used to match terms to consensus adverse event definitions for total knee arthroplasty [@healy2013].

```{r}
ComplicResponse6a <- ComplicResponse6 %>% 
  mutate(
    DateofOccurrence = case_when(
      ResponseID == "5258079" ~ DateofOccurrence + years(1),
      ResponseID == "5627467" ~ DateofOccurrence + years(1),
      ResponseID == "5258108" ~ DateofOccurrence - years(3),
      .default = DateofOccurrence
    ),
    ReoperationDate = case_when(
      ResponseID == "5627467" ~ DateofOccurrence + years(1),
      .default = ReoperationDate
  )
  ) %>% mutate(
    OccurDelay = as.numeric(interval(ymd(SurgeryDate), ymd(DateofOccurrence)), "days")
  ) %>% mutate(
    Bleed = if_else(str_detect(Term2,"bleed*|haemarth*|transfusion") & ComplicationType == "Post-Op","Bleed","No"),
    Wound = if_else(str_detect(Term2,"\\b(delay\\w*|heal\\w*|breakdown|necrosis)\\b") & ComplicationType == "Post-Op","Wound","No"),
    Thromboembolism = if_else(str_detect(Term2,"thromb*|embol*|occul*"),"Thromboembolism","No"),
    Neural = if_else(str_detect(Term2,"palsy|nerve*|(foot drop)"),"Neural","No"),
    Vascular = if_else(str_detect(Term2,"bleed*") & ComplicationType == "In-theatre","Vascular","No"),
    #Medial collateral injury - no occurrences
    Instability = if_else(str_detect(Term2,"instab*|unstable") & ComplicationType == "Post-Op","Instability","No"),
    #Malalignment - no occurrences
    Stiffness = if_else(str_detect(Term2,"range|stiff*|motion|arthrofib*|manipulat*|loss.extens*") & ComplicationType == "Post-Op","Stiffness","No"),
    Infection1 = if_else(str_detect(Term2,"superficial|absc*|cellulitis|(surgical site)|wound.+infect*") & ComplicationType == "Post-Op","InfectionSuperficial","No"),
    Infection2 = if_else(str_detect(Term2,"(implant.+retention)|(periprosthetic.+infect\\w*)|(prosthe\\w*.+infect\\w*)") & ComplicationType == "Post-Op","InfectionDeep","No"),
    Infection3 = if_else(str_detect(Term2,"(urinary.+infect*)|diverticulitis") & ComplicationType == "Post-Op","InfectionSyst","No"),
    PeriprostheticFracture = if_else(str_detect(Term2,"fracture*"),"Fracture","No"),
    Extensor = if_else(str_detect(Term2,"extensor.+mechansism") & ComplicationType == "Post-Op","Extensor","No"),
    Patellofemoral = if_else(str_detect(Term2,"patella*|patello*") & ComplicationType == "Post-Op","Patellofemoral","No"),
    Dislocation = if_else(str_detect(Term2,"disloc*") & ComplicationType == "Post-Op","Dislocation","No"),
    Delivery = if_else(str_detect(Term2,"robot|conver*") & ComplicationType == "In-theatre","Delivery","No"),
    Loosening = if_else(str_detect(Term2,"loosening|loose") & ComplicationType == "Post-Op","Loosening","No"),
    Revision = if_else(str_detect(Term2,"revision|revise*") & ComplicationType == "Post-Op" & !is.na(ReoperationDate),"Revision","No"),
    Reoperation = if_else(!is.na(ReoperationDate) & Revision == "No","Reoperation","No"),
    Readmission = if_else((Revision == "Revision"|Reoperation == "Reoperation")|str_detect(Term2,"readmi*|admit*|admiss*|hospital") & ComplicationType != "In-theatre","Readmission","No")
    #Mortality - no occurrences
  ) %>% rowwise() %>% mutate(
    Other = case_when(
    if_all(Bleed:Delivery, ~ str_detect(., "No")) ~ "Other",
    .default = "No"
    )
  ) %>% relocate(
    Other,
    .before = Revision
  )

```

```{r}
ComplicResponse7 <- ComplicResponse6a %>% pivot_longer(
  .,
  cols = c(
    "Bleed",
    "Wound",
    "Thromboembolism",
    "Neural",
    "Vascular",
    "Instability",
    "Stiffness",
    "Infection1",
    "Infection2",
    "Infection3",
    "PeriprostheticFracture",
    "Extensor",
    "Patellofemoral",
    "Dislocation",
    "Delivery",
    "Loosening",
    "Other",
    "Reoperation",
    "Readmission"
  ),
  cols_vary = "slowest",
  names_to = "Category_Name",
  values_to = "Category_Value",
  values_drop_na = FALSE
)  %>% filter(
  !(Category_Value == "No"),
  OccurDelay <= 90
) %>% group_by(
  TempIDPart
) %>% arrange(
  desc(DateofOccurrence),
  .by_group = TRUE
) %>% distinct( #duplicate entries for the same patient(Treatment)
  .,
  pick(TempIDPart,
  DateofOccurrence,
  Category_Value
  ),
  .keep_all = TRUE
) %>% ungroup()
```

```{r}

CutOffDate <- as.character("20230630")

MasterCensor <- MasterSheet5a %>% filter(
   !(TempIDPart %in% ComplicResponse7$TempIDPart)
) %>% dplyr::select(
  TempIDPart,
  SurgeryDate,
  GroupCorrected
) %>% bind_rows(
  .,
  ComplicResponse7 %>% dplyr::select(
    TempIDPart,
    SurgeryDate,
    GroupCorrected
  ) 
  ) %>% distinct(
    TempIDPart,
    .keep_all = TRUE
  ) %>% mutate(
  ComplicationOccurrence = "No",
  DateofOccurrence = ymd(CutOffDate),
  Category_Value = "Censored"
)
```

#### Patient Reported Outcomes

```{r}

MasterPROMs <- left_join(
  MasterSheet5a %>% dplyr::select(
    TempIDFull,
    AgeAtSurgery,
    Sex,
    BMI,
    GroupCorrected
  ),
  dplyr::select(SHARKSSnapshot,
                TempIDFull,
                InclusionSurgeryType,
                Consent,
                ZipCode,
                VR12MentalScore_Preop,
                VR12PhysicalScore_Preop,
                Oxford12_PainTotal_Preop,
                Oxford12_FunctionTotal_Preop,
                Oxford12_itemScore_Preop,
                VASPainScore_Preop,
                EligibleAtx3months,
                VR12MentalScore_3months,
                VR12PhysicalScore_3months,
                Oxford12_PainTotal_3months,
                Oxford12_FunctionTotal_3months,
                Oxford12_itemScore_3months,
                VASPainScore_3months,
),
by = "TempIDFull"
) %>% mutate(
    Group1 = forcats::fct_recode(
      GroupCorrected,
      "RAS" = "1",
      "Pre-RAS" = "2",
      "Non-RAS" = "3"
  )
)

```

```{r}

levels <- c("Preoperative" = "Preop",
            "3months" = "3months")
MasterPROMs1 <- MasterPROMs %>% rename_with(
  .,
  ~ stringr::str_replace(.,"_",""),
  starts_with("Oxford")
) %>% dplyr::select(
  Group1,
  TempIDFull,
  starts_with("Oxford"),
  starts_with("VR12")
) %>% pivot_longer(
  cols = !c(Group1,TempIDFull),
  names_to = c(".value","TimePoint"),
  names_sep = "_",
  values_drop_na = TRUE
) %>% mutate(
  TimePoint2 = forcats::fct_recode(
      TimePoint,!!!levels
  ) %>% fct_relevel(.,"Preoperative","3months")
) 
```

```{r}
#| label: tbl-proms-avail
#| tbl-cap: "Summary of available patient reported outcomes from analysis dataset."


TablePROMs <- tbl_summary(
  MasterPROMs1 %>% dplyr::select(
   Group1,
  TimePoint2,
  starts_with("Oxford"),
  starts_with("VR12")
  ),
  by = TimePoint2,
  missing = "no",
  label = "Group1" ~ "Group"
)

as_flex_table(TablePROMs) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )
  
```

## STROBE \[9\] Bias:

*Critically analyze potential sources of bias and the adequacy of methods used to address them.*

Retrospective cohort analyses are subject to a number of biases as noted by (citation). Specific to this analysis, the following considerations are noted below.

::: {#tbl-biases}
+-------------------+-------------------------------------------------------------------------------------------------+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| # Bias            | # Definition                                                                                    | # Source                  | # Mitigation                                                                                                                                                     |
|                   |                                                                                                 |                           |                                                                                                                                                                  |
| Misclassification | The clinical notes are misinterpreted to place the case in the incorrect Group                  |                           | Clinical notes reviewed by multiple reviewers.                                                                                                                   |
|                   |                                                                                                 |                           |                                                                                                                                                                  |
|                   |                                                                                                 |                           | Additional analysis checks to review grouping selected versus grouping by calculation against retrieved chart notes.                                             |
+-------------------+-------------------------------------------------------------------------------------------------+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Confounder        | A variable of interest and a target outcome simultaneously influenced by a third variable       | [@tennant2020]            | Regression models used to adjust models for estimated confounders identified through minimal adjustment sets using directed acyclic graphs.                      |
+-------------------+-------------------------------------------------------------------------------------------------+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Missing data      | The absence of a data value where a treatment record is eligible to have a data value collected | [@carroll2020]            | Missingness assessed to be of low impact (low incidence) to analysis dataset.                                                                                    |
+-------------------+-------------------------------------------------------------------------------------------------+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Pseudoreplication | Analyse data while ignoring dependency between observations. Inadequate model specification.    | [@davies2015; @lazic2010] | Used mixed effects linear model for procedure duration with patient identifier as random effect. Cluster for patient in survival (all-cause failure and retear). |
+-------------------+-------------------------------------------------------------------------------------------------+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Biases in analysis of a comparative observational cohort analysis.
:::

## Missing Data

Missingness is an unavoidable characteristic of clinical datasets, in particular patients from non-english speaking or lower socioeconomic backgrounds are less likely to respond to patient-reported outcome measures in lower limb arthroplasty [@konopka2023]. The mastersheet was adjusted using *tidyverse* to include only the required columns and to convert categorical columns to factors. The *naniar* package [@naniar] was used to generate a summary figure of missingness in the key variables of the analysis.

Missingness was assessed to be low enough to be ignored from the analysis.

```{r}

MasterSheetMiss <- MasterSheet5a %>% filter(
  if_any(c(AgeAtSurgery,Sex,ComorbidDiabetes,BMI,Surgery_ProcedureName:OperationFinish), ~is.na(.))
)


SHARKSSoc2a <- SHARKSSoc2 %>% rename(
  PatientID = "PatientId"
  ) %>% mutate(
  TempIDPart = paste0(PatientID,SurgerySide1)
) %>% relocate(
  TempIDPart
)

SHARKSBackfill <- SHARKSSoc2a %>% filter(
  TempIDPart %in% MasterSheetMiss$TempIDPart
)

MasterSheet5b <- MasterSheet5a %>% filter(
  TempIDPart %in% SHARKSBackfill$TempIDPart
) %>% filter(
  !(TempIDFull == "412600Right44896")
)

MismatchSHARK <- anti_join(
  MasterSheet5b,
  SHARKSBackfill,
  by = "TempIDPart"
)

MissingMaster <- naniar::as_shadow(MasterSheet5b)  %>% mutate(Sheet = "StudyMaster")

MissingSHARKS <- naniar::as_shadow(
  SHARKSBackfill
  ) %>% mutate(
    Sheet = "RegistrySnapshot"
    )

MissingComp <-bind_rows(
  MissingMaster,
  MissingSHARKS
) %>% relocate(
  Sheet,
  .before = ProgressIndicator_NA
)



```

```{r}
#| label: tbl-surgical-avail
#| tbl-cap: "Summary of missing values within surgical fields of analysis dataset."

TableMiss1 <- tbl_summary(
  MissingComp %>% dplyr::select(
    Sheet,
    Surgery_ProcedureName_NA:OperationFinish_NA
    ),
  by = Sheet,
type = all_categorical() ~ "dichotomous",
value = everything() ~ "NA"
)

as_flex_table(TableMiss1) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )
```

```{r}
#| label: tbl-dataset-avail
#| tbl-cap: "Overall missingness rates for key variables within the analysis dataset."

MissingMaster2 <- naniar::as_shadow(MasterSheet5a) 

TableMiss2 <- tbl_summary(
  MissingMaster2 %>% dplyr::select(
    AgeAtSurgery_NA,
    Sex_NA,
    BMI_NA,
    ComorbidDiabetes_NA,
    Surgery_ProcedureName_NA:OperationFinish_NA),
type = all_categorical() ~ "dichotomous",
value = everything() ~ "NA"
)

as_flex_table(TableMiss2) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )

```

```{r}
#| label: fig-keyvar-avail
#| fig-cap: "Summary of missingness of key demographic variables for analysis sample."

FigureMiss3 <- gg_miss_var(MasterSheet5a %>% dplyr::select(
  AgeAtSurgery,
  Sex,
  BMI,
  ComorbidDiabetes,
  ComorbidSmoke,
),
show_pct = TRUE
)

knitr::knit_print(FigureMiss3)

```

## STROBE \[11\] Quantitative variables:

*Evaluate the analytical choices of the quantitative variables within the dataset.*

Set variables for survival and logistic regression

```{r}
ComplicMaster <- bind_rows(
  ComplicResponse7,
  MasterCensor
) %>% mutate(
  Category = fct(
    Category_Value,
    levels = c(
      "Censored",
      "Fracture",
      "Thromboembolism",
      "Bleed",
      "InfectionSuperficial",
      "Delivery",
      "Stiffness",
      "Neural",
      "Vascular",
      "Patellofemoral",
      "InfectionDeep",
      "Other",
      "Wound",
      "InfectionSyst",
      "Reoperation",
      "Readmission"
      )
  )
) %>% mutate(
  OccurDelay = if_else(is.na(OccurDelay),90,OccurDelay)
) %>% group_by( # grouping here
    TempIDPart    
    ) %>% arrange(
    DateofOccurrence,
    .by_group = TRUE
    ) %>% arrange(
    OccurDelay,
    .by_group = TRUE
  ) %>% mutate(
    RowNum = row_number()
  )  %>% mutate(
  DurationStart = case_when(
    RowNum > 1 ~ dplyr::lag(OccurDelay),
    .default = 0
  )
  ) %>% mutate(
    DurationDiff = as.numeric(OccurDelay - DurationStart)
  ) %>% rename(
    DurationStop = "OccurDelay"
  ) %>% relocate(
    DurationStop, .after = DurationDiff
  ) %>% mutate(
    DurationStop1 = case_when(
      DurationDiff == 0 ~ DurationStop + 1,
      .default = DurationStop
      )
    ) %>% mutate(
  DurationStart1 = case_when(
    RowNum > 1 ~ dplyr::lag(DurationStop1),
    .default = 0
    ),
      DurationDiffLag = as.numeric(lag(DurationStop1) - DurationStart1),
  DurationDiff2 = as.numeric(DurationStop1 - DurationStart1)
  ) %>% relocate(
    DurationStop1, .after = DurationStart1
  ) %>% dplyr::select(
    TempIDPart,
    DurationStart1,
    DurationStop1,
    DurationDiff2,
    DurationDiffLag,
    Category,
    RowNum,
    GroupCorrected
  ) %>% ungroup() %>% mutate(
    Group1 = forcats::fct_recode(
      GroupCorrected,
      "RAS" = "1",
      "Pre-RAS" = "2",
      "Non-RAS" = "3"
  )
  )

```

```{r}
ComplicMaster2 <- left_join(
  ComplicMaster,
  MasterSheet5a %>% filter(
    !(MockUpID == "157031left44551" & Surgeon == "B"),
    !(MockUpID == "412600right44923")
      ) %>% dplyr::select(
    TempIDPart,
    Sex,
    AgeAtSurgery,
    BMI,
    BilateralStatus2,
    ComorbidSmoke,
    ComorbidDiabetes
  ),
  by = "TempIDPart"
)
```

```{r}
category_dataframes <- ComplicMaster %>%
  group_split(Category) %>%
  set_names(levels(ComplicMaster$Category))

ComplicRevision <- ComplicResponse6a %>% filter(Revision == "Revision")
ComplicReoperation <- ComplicResponse6a %>% filter(Reoperation == "Reoperation")
ComplicReadmission <- ComplicResponse6a %>% filter(Readmission == "Readmission")

MasterSheet6 <- MasterSheet5a %>% 
  mutate(
    Bleed = if_else(TempIDPart %in% category_dataframes$Bleed$TempIDPart, "Yes", "No"),
    Thromboembolism = if_else(TempIDPart %in% category_dataframes$Thromboembolism$TempIDPart,"Yes","No"),
    Neural = if_else(TempIDPart %in% category_dataframes$Neural$TempIDPart,"Yes","No"),
    Vascular = if_else(TempIDPart %in% category_dataframes$Vascular$TempIDPart,"Yes","No"),
        Stiffness = if_else(TempIDPart %in% category_dataframes$Stiffness$TempIDPart,"Yes","No"),
    InfectionSuperficial = if_else(TempIDPart %in% category_dataframes$InfectionSuperficial$TempIDPart,"Yes","No"),
    InfectionDeep = if_else(TempIDPart %in% category_dataframes$InfectionDeep$TempIDPart,"Yes","No"),
    InfectionSyst = if_else(TempIDPart %in% category_dataframes$InfectionSyst$TempIDPart,"Yes","No"),
    PeriprostheticFracture = if_else(TempIDPart %in% category_dataframes$Fracture$TempIDPart,"Yes","No"),
    Patellofemoral = if_else(TempIDPart %in% category_dataframes$Patellofemoral$TempIDPart,"Yes","No"),
    Delivery = if_else(TempIDPart %in% category_dataframes$Delivery$TempIDPart,"Yes","No"),
    Readmission = if_else(TempIDPart %in% ComplicReadmission$TempIDPart,"Yes","No"),
    Reoperation = if_else(TempIDPart %in% ComplicReoperation$TempIDPart,"Yes","No"),
    Revision = if_else(TempIDPart %in% ComplicRevision$TempIDPart,"Yes","No"),
    Group1 = forcats::fct_recode(
      GroupCorrected,
      "RAS" = "1",
      "Pre-RAS" = "2",
      "Non-RAS" = "3"
    )
  )
  
```

## STROBE \[12\] Statistical Methods:

*Evaluate the appropriateness and robustness of the statistical techniques used for analysis.*

### Descriptives

Descriptives for exposure and outcome variables were summarised into tables. Univariate comparisons were between Groups for adverse events and comparisons made by Fisher's exact test (binary outcomes) and Pearson's chi-square tests (multilevel categorical variables) as per the *gtsummary* package functions.

### Regression preparation

Set up input table for statistical analysis with only variables required for models.

```{r}
MasterSheetKM <- MasterSheet6 %>% dplyr::select(
  TempIDPart,
  PatientID2,
  Bleed:Group1,
  AgeAtSurgery,
  Sex,
  BMI,
  BilateralStatus2,
  ComorbidBone,
  ComorbidSmoke,
  ComorbidDiabetes,
  ComorbidCardiovascular,
  ComorbidAutoImmune
) %>% dplyr::mutate(
  across(
    .cols = Bleed:Revision,
    .fns = ~case_when(
      !is.na(.) ~ if_else(.== "No",0,1),
      .default = NA
      ),
    .names = "{.col}Bin")
) %>% left_join(
  .,
  ComplicMaster2 %>% group_by(
  TempIDPart
  ) %>% filter(
    Category == "InfectionSuperficial"
    ) %>% dplyr::select(
      TempIDPart,
      DurationStop1
    ) %>% slice_min(
      DurationStop1,
      n = 1),
  by = "TempIDPart"
  ) %>% mutate(
    DurationInfectSuper = if_else(is.na(DurationStop1),90,DurationStop1)
  ) %>% dplyr::select(
    -DurationStop1
  ) %>% left_join(
  .,
  ComplicMaster2 %>% group_by(
  TempIDPart
  ) %>% filter(
    Category == "Stiffness"
    ) %>% dplyr::select(
      TempIDPart,
      DurationStop1
    ) %>% slice_min(
      DurationStop1,
      n = 1),
  by = "TempIDPart"
  ) %>% mutate(
    DurationStiff = if_else(is.na(DurationStop1),90,DurationStop1)
  ) %>% dplyr::select(
    -DurationStop1
  ) %>% left_join(
  .,
  ComplicMaster2 %>% group_by(
  TempIDPart
  ) %>% filter(
    Category == "Readmission"
    ) %>% dplyr::select(
      TempIDPart,
      DurationStop1
    ) %>% slice_min(
      DurationStop1,
      n = 1),
  by = "TempIDPart"
  ) %>% mutate(
    DurationReadmit = if_else(is.na(DurationStop1),90,DurationStop1)
  ) %>% dplyr::select(
    -DurationStop1
  ) %>% left_join(
  .,
  ComplicMaster2 %>% group_by(
  TempIDPart
  ) %>% filter(
    Category == "Thromboembolism"
    ) %>% dplyr::select(
      TempIDPart,
      DurationStop1
    ) %>% slice_min(
      DurationStop1,
      n = 1),
  by = "TempIDPart"
  ) %>% mutate(
    DurationThrombo = if_else(is.na(DurationStop1),90,DurationStop1)
  ) %>% dplyr::select(
    -DurationStop1
  ) %>% ungroup()
```

The *ggdag* package (v`{r} utils::packageVersion("ggdag")` [@ggdag] was used to create and visualise directed acyclic graphs (in conjunction with *ggplot2*), with minimal adjustment sets to ensure correct specification of models to estimate the effect of Group on outcome variables.

### Procedure Duration

A brief literature review was conducted to identify potential factors that should be adjusted for when assessing the effect of *Group* on *Procedure Duration* in the present sample. One study from the USA [@acuña2020] examined the NSQIP database between 01-Jan-2008 and 31-Dec-2017 in 140,890 total knee arthroplasty cases (mixture of primary and revision) and reported significant correlations with a number of variables (Table 1). A registry study from Norway [@badawy2017] of 28 043 primary TKA from 2005 to 2015 identified significant correlations a number of patient and surgical variables (Table 1).

::: {#tbl-adjustset}
+--------------------+------------------------------------------+--------------+------------------------------+
| Category           | Variable                                 | Source       | Available in present dataset |
+--------------------+------------------------------------------+--------------+------------------------------+
| Patient Factor     | Sex (Male)                               | Acuna et al  | ✅                           |
|                    |                                          |              |                              |
|                    |                                          | Badawy et al |                              |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Age at surgery                           | Acuna et al  | ✅                           |
|                    |                                          |              |                              |
|                    |                                          | Badawy et al |                              |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Body mass index                          | Acuna et al  | ✅                           |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | ASA - Class 3                            | Acuna et al  | ❌                           |
|                    |                                          |              |                              |
|                    |                                          | Badawy et al |                              |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Functional status                        | Acuna et al  | ❌                           |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Preoperative haematocrit, sodium and INR | Acuna et al  | ❌                           |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Smoking history                          | Acuna et al  | ✅                           |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Hypertension (requiring medication)      | Acuna et al  | ✅\*                         |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Weight loss within previous 6 months     | Acuna et al  | ❌                           |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Diagnosis other than OA                  | Badawy et al | ✅†                          |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Previous knee surgery                    | Badawy et al | ❌                           |
+--------------------+------------------------------------------+--------------+------------------------------+
| Managament Factors | Perioperative complications              | Badawy et al | ✅                           |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Use of navigation                        | Badawy et al | ✅                           |
+--------------------+------------------------------------------+--------------+------------------------------+
|                    | Implant Brand                            | Badawy et al | ✅                           |
+--------------------+------------------------------------------+--------------+------------------------------+

Summary of potential adjustment set for *Procedure Duration* retrieved from the literature.
:::

\*Captured as presence of cardiovascular comorbidity (CVA, MI, hypertension); † insufficient variation in this variable for inclusion into model.

Other factors included within the present context included the following;

-   Bilateral surgery - considering the case mix of simultaneous bilateral surgeries

-   Operator - considering the teaching hospital context, it is not possible to rule out the effect of having a junior surgeon performing the procedure on longer operative duration.

-   Implant brand was discarded from the present analysis due to the high variation in implant selection and the low numbers within certain implant categories.

```{r}
#| label: fig-dag-adjust
#| fig-cap: "Directed acyclic graph of procedure duration in total knee arthroplasty."

DAGDuration <- ggdag::dagify(ProcedureDuration ~ GuidanceGroup + Sex + Age + BMI +  ComorbidSmoke + ComorbidCardiovascular + Bilateral,
          GuidanceGroup ~ Bilateral,
          ComorbidSmoke ~ Age + Sex,
          ComorbidCardiovascular ~ Age + Sex + ComorbidSmoke + BMI,
          Bilateral ~ Age,
          BMI ~ Age,
  labels = c(
    "ProcedureDuration" = "Duration of\n Procedure",
    "ComorbidSmoke" = "Smoking History",
    "ComorbidCardiovascular" = "CVD History",
    "Age" = "Age at\n Surgery",
    "GuidanceGroup" = "GuidanceGroup",
    "BMI" = "Body Mass\n Index",
    "Sex" = "Sex",
    "Bilateral" = "Bilateral Surgery"
  ),
  exposure = "GuidanceGroup",
  outcome = "ProcedureDuration"
)

# Create a tidy version of the DAG and apply custom labels
tidy_dag1 <- tidy_dagitty(DAGDuration, layout = "auto") %>%
  mutate(label = case_when(
    name == "ProcedureDuration" ~ "Duration of\n Procedure",
    name == "ComorbidSmoke" ~ "Smoking History",
    name == "ComorbidCardiovascular" ~ "CVD History",
    name == "Age" ~ "Age at\n Surgery",
    name == "GuidanceGroup" ~ "GuidanceGroup",
    name == "BMI" ~ "Body Mass\n Index",
    name == "Bilateral" ~ "Bilateral Surgery",
    name == "Sex" ~ "Sex",
    TRUE ~ name
  ))

Figure5 <- ggplot(
  tidy_dag1, 
  aes(
    x = x, 
    y = y, 
    xend = xend, 
    yend = yend)
  ) +
  geom_dag_node(
    color = "darkblue", 
    fill = "lightblue", 
    alpha = 0.5, 
    size = 20) +
  geom_dag_text(
    aes(
      label = label
      ), 
    color = "black", 
    fontface = "bold", 
    size = 3, 
    vjust = 0.5
    ) +
  geom_dag_edges(
    edge_color = "gray50", 
    edge_width = 0.5, 
    #edge_arrow_size = 0.3
    ) +
  theme_dag(
    base_size = 12,
    base_family = "",
    plot.background = element_rect(fill = "white"),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5, 
      size = 16, 
      face = "bold"
      ),
    plot.margin = margin(
      20, 
      20, 
      20, 
      20
      )
  ) +
  ggtitle(
    "Directed Acyclic Graph"
    )

knitr::knit_print(Figure5)


```

```{r}
#| label: fig-dag-minadjust
#| fig-cap: "Calculated minimum adjustment set for modelling procedure duration in total knee arthroplasty."

Figure6 <- ggdag_adjustment_set(
  tidy_dag1,
  text = FALSE,
  #use_labels = "label"
  exposure = "GuidanceGroup",
  outcome = "ProcedureDuration"
  ) +
  geom_dag_node(
    color = "darkblue", 
    fill = "lightblue", 
    alpha = 0.7, 
    size = 10
  ) +
  # geom_dag_text(
  #   aes(label = label),  # Use the 'label' column directly
  #   color = "black", 
  #   fontface = "bold", 
  #   size = 3, 
  #   vjust = -1.5,  # Adjust vertical position
  #   hjust = 1.5,  # Adjust horizontal position
  #   show.legend = FALSE  # Prevent text from appearing in legend
  # ) +
  geom_dag_label_repel(
    aes(label = label, fill = adjusted),
    color = "white",
    fontface = "bold",
    size = 3,
    show.legend = FALSE,
    box.padding = unit(0.5, "lines"),  # Padding around labels
    point.padding = unit(0.5, "lines"),  # Padding around points
    nudge_y = 0.5,  # Adjust vertical nudge
    nudge_x = 0.5   # Adjust horizontal nudge
  ) +
  geom_dag_edges(
    edge_color = "gray50", 
    edge_width = 0.5
  ) +
  theme_dag(
    base_size = 10,
    base_family = "",
    plot.background = element_rect(fill = "white"),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5, 
      size = 10, 
      face = "bold"
    ),
    plot.margin = margin(20,20,20,20),
    legend.position = "bottom",
    legend.background = element_rect(fill = "white", color = "gray80"),
    legend.title = element_text(face = "bold")
  ) +
  ggtitle("Adjustment Set for Directed Acyclic Graph")


knitr::knit_print(Figure6)

```

The procedure duration outcome is characterised by positive values, overdispersion (high variance) and right skewness (some cases take well above average) (Figure 7). The *gamma* distribution is a continuous probability distribution that is suitable for modelling positive values that are skewed and has been previously demonstrated to be a robust choice in skewed medical data [@malehi2015]. The master table was subset for procedure duration analysis. The dataset is also at risk of pseudoreplication due to the presence of multiple data entries for the same patient with bilateral procedures. A mixed-effects gamma regression model ("log" link function) with the minimal adjustment set as identified in the DAG, was applied using *lme4* package package (v`{r} utils::packageVersion("lme4")`) [@lme4]. Model predictions and post-comparisons between levels of fixed effects were calculated using the *marginaleffects* package package (v`{r} utils::packageVersion("marginaleffects")` [@marginaleffects].

```{r}
#| label: fig-duration-dist
#| fig-cap: "Initial distribution of procedure duration (observed) separated by group."

Figure7 <- ggplot(data = MasterSheet6, mapping = aes(y = Group1, x = ProcedureDuration)) +
  stat_slab(aes(thickness = after_stat(pdf*n)), scale = 0.7) +
  stat_dotsinterval(side = "bottom", scale = 0.7, slab_linewidth = NA) +
  #scale_fill_brewer(palette = "Set2") +
  ggtitle('Procedure Duration by Group')

knitr::knit_print(Figure7)
```

```{r}
#| label: duration-subset

Duration_Analysis <- MasterSheet6 %>% dplyr::select(PatientID2,
                                                    ProcedureDuration,
                                                    Group1,
                                                    AgeAtSurgery,
                                                    Sex,
                                                    BMI,
                                                    BilateralStatus) %>%
  mutate(
    BilateralStatus = forcats::fct(BilateralStatus,
                                   levels = )
    #ComorbidSmoke = as.factor(ComorbidSmoke),
    #ComorbidCardiovascular = as.factor(ComorbidCardiovascular),
    #Pathology2 = as.factor(ifelse(Pathology == "Osteoarthritis", "Osteoarthritis","Other"))
  )

```

```{r}
#| label: duration-glm

# Fit a mixed-effects Gamma model
Duration_model <- lme4::glmer(ProcedureDuration ~ Group1 + BilateralStatus + (1|PatientID2),
                     family = Gamma(link = "log"),
                     data = Duration_Analysis)

```

### Adverse events

A brief literature review was conducted to identify potential factors that should be adjusted for when assessing the effect of *Group* on adverse events (*Superficial Infection*, *Stiffness, Thromboembolism, Readmission*) in the present sample.

For surgical site infections, one study by [@poultsides2013] reported a number of patient factors associated with SSI in primary knee arthroplasty using the USA National Inpatient Sample (N = 784 335 TKAs). A retrospective cohort [@simon2022] identified smoking as a risk factor for SSI, and a systematic review of six articles (N = 7081 TKA) [@heifner2023] contended that local adiposity may be a more reliable predictor of infection risk after TKA, with mixed evidence over the relationship between BMI and infection risk.

::: {#tbl-adjust-infection}
|  |  |  |
|----|----|----|
| Variable | Source | Available in present dataset |
| Sex (Male) | Poultsides et al | ✅ |
| Race | Poultsides et al | ❌ |
| Cancer diagnosis | Poultsides et al | ✅ |
| Liver disease | Poultsides et al | ❌ |
| Coagulopathies | Poultsides et al | ❌ |
| Fluid \| Eloctrolyte disorders | Poultsides et al | ❌ |
| Heart failure | Poultsides et al | ✅ \* |
| Pulmonary circulation disease | Poultsides et al | ✅ \* |
| Smoking history | Simon et al | ✅ |
| Body mass index | Heifner et al | ✅ |

Summary of potential adjustment set for *Infection* retrieved from the literature.
:::

\*Stored in the dataset as comorbidities of a cardiovascular nature.

```{r}
#| label: fig-dag-infect
#| fig-cap: "Directed acyclic graph of surgical site infection after total knee arthroplasty."

# Superficial Infection
DAGAE1 <- dagify(SSI ~ GuidanceGroup + Sex + BMI + ComorbidSmoke + ComorbidCVD + ComorbidCancer + ComorbidDiabetes,
          GuidanceGroup ~ Sex + ComorbidSmoke + ComorbidCardiovascular, #assumptions prior to group comparison
          ComorbidSmoke ~ Sex,
          ComorbidCVD ~ Sex + ComorbidSmoke + BMI,
          ComorbidDiabetes ~ Sex + ComorbidSmoke + BMI,
  labels = c(
    "SSI" = "SSI",
    "Sex" = "Sex",
    "ComorbidSmoke" = "Smoking History",
    "ComorbidCVD" = "CVD History",
    "ComorbidCancer" = "Cancer History",
    "ComorbidDiabetes" = "Diabetes History",
    "GuidanceGroup" = "Guidance Group",
    "BMI" = "Body Mass Index"
  ),
  exposure = "GuidanceGroup",
  outcome = "SSI"
)

# Create a tidy version of the DAG and apply custom labels
tidy_dag2 <- tidy_dagitty(DAGAE1, layout = "auto") %>%
  mutate(label = case_when(
    name == "SSI" ~ "SSI",
    name == "ComorbidSmoke" ~ "Smoking History",
    name == "ComorbidCardiovascular" ~ "CVD History",
    name == "GuidanceGroup" ~ "GuidanceGroup",
    name == "BMI" ~ "Body Mass\n Index",
    name == "Sex" ~ "Sex",
    TRUE ~ name
  ))

Figure8 <- ggplot(
  tidy_dag2, 
  aes(
    x = x, 
    y = y, 
    xend = xend, 
    yend = yend)
  ) +
  geom_dag_node(
    color = "darkblue", 
    fill = "lightblue", 
    alpha = 0.5, 
    size = 20) +
  geom_dag_text(
    aes(
      label = label
      ), 
    color = "black", 
    fontface = "bold", 
    size = 3, 
    vjust = 0.5
    ) +
  geom_dag_edges(
    edge_color = "gray50", 
    edge_width = 0.5, 
    #edge_arrow_size = 0.3
    ) +
  theme_dag(
    base_size = 12,
    base_family = "",
    plot.background = element_rect(fill = "white"),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5, 
      size = 16, 
      face = "bold"
      ),
    plot.margin = margin(
      20, 
      20, 
      20, 
      20
      )
  ) +
  ggtitle(
    "Directed Acyclic Graph"
    )

knitr::knit_print(Figure8)

```

```{r}
#| label: fig-adjust-infect
#| fig-cap: "Calculated minimum adjustment set for modelling surgical site infection in total knee arthroplasty."

Figure9 <- ggdag_adjustment_set(
  tidy_dag2,
  text = FALSE,
  #use_labels = "label"
  exposure = "GuidanceGroup",
  outcome = "SSI"
  ) +
  geom_dag_node(
    color = "darkblue", 
    fill = "lightblue", 
    alpha = 0.7, 
    size = 10
  ) +
  # geom_dag_text(
  #   aes(label = label),  # Use the 'label' column directly
  #   color = "black", 
  #   fontface = "bold", 
  #   size = 3, 
  #   vjust = -1.5,  # Adjust vertical position
  #   hjust = 1.5,  # Adjust horizontal position
  #   show.legend = FALSE  # Prevent text from appearing in legend
  # ) +
  geom_dag_label_repel(
    aes(label = label, fill = adjusted),
    color = "white",
    fontface = "bold",
    size = 3,
    show.legend = FALSE,
    box.padding = unit(0.5, "lines"),  # Padding around labels
    point.padding = unit(0.5, "lines"),  # Padding around points
    nudge_y = 0.5,  # Adjust vertical nudge
    nudge_x = 0.5   # Adjust horizontal nudge
  ) +
  geom_dag_edges(
    edge_color = "gray50", 
    edge_width = 0.5
  ) +
  theme_dag(
    base_size = 10,
    base_family = "",
    plot.background = element_rect(fill = "white"),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5, 
      size = 10, 
      face = "bold"
    ),
    plot.margin = margin(20,20,20,20),
    legend.position = "bottom",
    legend.background = element_rect(fill = "white", color = "gray80"),
    legend.title = element_text(face = "bold")
  ) +
  ggtitle("Adjustment Set for Directed Acyclic Graph")


knitr::knit_print(Figure9)

```

A literature review identified a recent meta-analysis [@zhang2015] of fourteen cohort studies (18075 VTE from 1723350 cases) that posed a number of potential factors affecting VTE risk. Oddly, this paper did not examine smoking as a factor. Smoking in general has been associated with an increased risk of VTE in observational studies (35151 events in 3966184 participants) not specific to lower limb arthroplasty [@cheng2013]. Similarly, a diagnosis of diabetes has been associated with an increased risk of VTE in the general population [@deischinger2022], which may be confounded by sex.

::: {#tbl-adjust-vte}
+--------------------------+-------------------+----------------------------+
| Variable                 | Source            | Present in current dataset |
+==========================+===================+============================+
| History of VTE           | Zhang et al       | ❌                         |
+--------------------------+-------------------+----------------------------+
| Varicose vein            | Zhang et al       | ❌                         |
+--------------------------+-------------------+----------------------------+
| Congestive heart failure | Zhang et al       | ✅\*                       |
+--------------------------+-------------------+----------------------------+
| Sex                      | Zhang et al       | ✅                         |
|                          |                   |                            |
|                          | Deischinger et al |                            |
+--------------------------+-------------------+----------------------------+
| Age                      | Zhang et al       | ✅                         |
+--------------------------+-------------------+----------------------------+
| Active hypertension      | Zhang et al       | ✅\*                       |
+--------------------------+-------------------+----------------------------+
| History of cancer        | Zhang et al       | ✅†                        |
+--------------------------+-------------------+----------------------------+
| Active diabetes          | Deischinger et al | ✅                         |
+--------------------------+-------------------+----------------------------+
| BMI                      | Zhang et al       | ✅                         |
+--------------------------+-------------------+----------------------------+
| Race                     | Zhang et al       | ❌                         |
+--------------------------+-------------------+----------------------------+
| History of smoking       | Cheng et al       | ✅                         |
+--------------------------+-------------------+----------------------------+

Summmary of potential factors associated with *venous thromboembolism* (VTE) after total knee arthroplasty.
:::

\*Stored in the dataset as comorbidities of a cardiovascular nature. †Stored as cancer related comorbities, combined as history or current diagnosis.

```{r}
#| label: fig-dag-vte
#| fig-cap: "Directed acyclic graph of venous thromboembolism after total knee arthroplasty."

# Thromboembolism
DAGAE2 <- dagify(VTE ~ GuidanceGroup + Sex + BMI + Age + ComorbidSmoke + ComorbidCVD + ComorbidCancer + ComorbidDiabetes,
          
          GuidanceGroup ~ Sex + ComorbidSmoke + ComorbidCardiovascular + ComorbidDiabetes, #assumptions prior to group comparison
          ComorbidSmoke ~ Sex,
          ComorbidCVD ~ Sex + ComorbidSmoke + BMI,
          ComorbidDiabetes ~ Sex + ComorbidSmoke + BMI,
  labels = c(
    "VTE" = "VTE",
    "Sex" = "Sex",
    "ComorbidSmoke" = "Smoking History",
    "ComorbidCVD" = "CVD History",
    "ComorbidCancer" = "Cancer History",
    "ComorbidDiabetes" = "Diabetes History",
    "GuidanceGroup" = "Guidance Group",
    "Age" = "Age at\n Surgery",
    "BMI" = "Body Mass Index"
  ),
  exposure = "GuidanceGroup",
  outcome = "VTE"
)

# Create a tidy version of the DAG and apply custom labels
tidy_dag3 <- tidy_dagitty(DAGAE2, layout = "auto") %>%
  mutate(label = case_when(
    name == "VTE" ~ "VTE",
    name == "Sex" ~ "Sex",
    name == "ComorbidSmoke" ~ "Smoking History",
    name == "ComorbidCVD" ~ "CVD History",
    name == "ComorbidCancer" ~ "Cancer History",
    name == "ComorbidDiabetes" ~ "Diabetes History",
    name == "GuidanceGroup" ~ "Guidance Group",
    name == "Age" ~ "Age at\n Surgery",
    name == "BMI" ~ "Body Mass Index",
    TRUE ~ name
  ))

Figure10 <- ggplot(
  tidy_dag3, 
  aes(
    x = x, 
    y = y, 
    xend = xend, 
    yend = yend)
  ) +
  geom_dag_node(
    color = "darkblue", 
    fill = "lightblue", 
    alpha = 0.5, 
    size = 20) +
  geom_dag_text(
    aes(
      label = label
      ), 
    color = "black", 
    fontface = "bold", 
    size = 3, 
    vjust = 0.5
    ) +
  geom_dag_edges(
    edge_color = "gray50", 
    edge_width = 0.5, 
    #edge_arrow_size = 0.3
    ) +
  theme_dag(
    base_size = 12,
    base_family = "",
    plot.background = element_rect(fill = "white"),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5, 
      size = 16, 
      face = "bold"
      ),
    plot.margin = margin(
      20, 
      20, 
      20, 
      20
      )
  ) +
  ggtitle(
    "Directed Acyclic Graph"
    )

knitr::knit_print(Figure10)

```

```{r}
#| label: fig-adjust-vte
#| fig-cap: "Calculated minimum adjustment set for modelling venous thromboembolism in total knee arthroplasty."

Figure11 <- ggdag_adjustment_set(
  tidy_dag3,
  text = FALSE,
  #use_labels = "label"
  exposure = "GuidanceGroup",
  outcome = "VTE"
  ) +
  geom_dag_node(
    color = "darkblue", 
    fill = "lightblue", 
    alpha = 0.7, 
    size = 10
  ) +
  # geom_dag_text(
  #   aes(label = label),  # Use the 'label' column directly
  #   color = "black", 
  #   fontface = "bold", 
  #   size = 3, 
  #   vjust = -1.5,  # Adjust vertical position
  #   hjust = 1.5,  # Adjust horizontal position
  #   show.legend = FALSE  # Prevent text from appearing in legend
  # ) +
  geom_dag_label_repel(
    aes(label = label, fill = adjusted),
    color = "white",
    fontface = "bold",
    size = 3,
    show.legend = FALSE,
    box.padding = unit(0.5, "lines"),  # Padding around labels
    point.padding = unit(0.5, "lines"),  # Padding around points
    nudge_y = 0.5,  # Adjust vertical nudge
    nudge_x = 0.5   # Adjust horizontal nudge
  ) +
  geom_dag_edges(
    edge_color = "gray50", 
    edge_width = 0.5
  ) +
  theme_dag(
    base_size = 10,
    base_family = "",
    plot.background = element_rect(fill = "white"),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5, 
      size = 10, 
      face = "bold"
    ),
    plot.margin = margin(20,20,20,20),
    legend.position = "bottom",
    legend.background = element_rect(fill = "white", color = "gray80"),
    legend.title = element_text(face = "bold")
  ) 
# +
#   ggtitle("Adjustment Set for Directed Acyclic Graph")


knitr::knit_print(Figure11)

```

A literature review revealed a recent meta-analysis [@tibbo2019] of 35 cohort studies (48873 TKAs) and an incidence of 4% at up to 12 weeks postoperatively. There was insufficient evidence to determine the relationship between diabetes and smoking status on stiffness risk. A more recent cohort study [@owen2021] of 12735 cases also observed an incidence of 3.6% A summary of factors associated with postoperative stiffness is summarised below.

::: {#tbl-adust-stiffness}
+-------------+-------------+----------------------------+
| Variable    | Source      | Present in current dataset |
+=============+=============+============================+
| Sex         | Tibbo et al | ✅                         |
+-------------+-------------+----------------------------+
| Age         | Tibbo et al | ✅                         |
|             |             |                            |
|             | Owen et al  |                            |
+-------------+-------------+----------------------------+
| BMI         | Tibbo et al | ✅                         |
+-------------+-------------+----------------------------+
| Diabetes    | Owen et al  | ✅                         |
+-------------+-------------+----------------------------+

Summmary of potential factors associated with **stiffness** after total knee arthroplasty.
:::

```{r}
#| label: fig-dag-stiffness
#| fig-cap: "Directed acyclic graph of knee stiffness after total knee arthroplasty."

# Stiffness
DAGAE3 <- dagify(Stiffness ~ GuidanceGroup + Sex + BMI + Age + ComorbidDiabetes,
          GuidanceGroup ~ Sex + ComorbidDiabetes, #assumptions prior to group comparison
          ComorbidDiabetes ~ Sex + BMI,
  labels = c(
    "Stiffness" = "Stiffness",
    "Sex" = "Sex",
    "ComorbidDiabetes" = "Diabetes History",
    "GuidanceGroup" = "Guidance Group",
    "Age" = "Age at\n Surgery",
    "BMI" = "Body Mass Index"
  ),
  exposure = "GuidanceGroup",
  outcome = "Stiffness"
)

# Create a tidy version of the DAG and apply custom labels
tidy_dag4 <- tidy_dagitty(DAGAE3, layout = "auto") %>%
  mutate(label = case_when(
    name == "Stiffness" ~ "Stiffness",
    name == "Sex" ~ "Sex",
    name == "ComorbidDiabetes" ~ "Diabetes History",
    name == "GuidanceGroup" ~ "Guidance Group",
    name == "Age" ~ "Age at\n Surgery",
    name == "BMI" ~ "Body Mass Index",
    TRUE ~ name
  ))

Figure12 <- ggplot(
  tidy_dag4, 
  aes(
    x = x, 
    y = y, 
    xend = xend, 
    yend = yend)
  ) +
  geom_dag_node(
    color = "darkblue", 
    fill = "lightblue", 
    alpha = 0.5, 
    size = 20) +
  geom_dag_text(
    aes(
      label = label
      ), 
    color = "black", 
    fontface = "bold", 
    size = 3, 
    vjust = 0.5
    ) +
  geom_dag_edges(
    edge_color = "gray50", 
    edge_width = 0.5, 
    #edge_arrow_size = 0.3
    ) +
  theme_dag(
    base_size = 12,
    base_family = "",
    plot.background = element_rect(fill = "white"),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5, 
      size = 16, 
      face = "bold"
      ),
    plot.margin = margin(
      20, 
      20, 
      20, 
      20
      )
  ) +
  ggtitle(
    "Directed Acyclic Graph"
    )

knitr::knit_print(Figure12)

```

```{r}
#| label: fig-adjust-stiffness
#| fig-cap: "Calculated minimum adjustment set for modelling stiffness after total knee arthroplasty."

Figure13 <- ggdag_adjustment_set(
  tidy_dag4,
  text = FALSE,
  #use_labels = "label"
  exposure = "GuidanceGroup",
  outcome = "Stiffness"
  ) +
  geom_dag_node(
    color = "darkblue", 
    fill = "lightblue", 
    alpha = 0.7, 
    size = 10
  ) +
  # geom_dag_text(
  #   aes(label = label),  # Use the 'label' column directly
  #   color = "black", 
  #   fontface = "bold", 
  #   size = 3, 
  #   vjust = -1.5,  # Adjust vertical position
  #   hjust = 1.5,  # Adjust horizontal position
  #   show.legend = FALSE  # Prevent text from appearing in legend
  # ) +
  geom_dag_label_repel(
    aes(label = label, fill = adjusted),
    color = "white",
    fontface = "bold",
    size = 3,
    show.legend = FALSE,
    box.padding = unit(0.5, "lines"),  # Padding around labels
    point.padding = unit(0.5, "lines"),  # Padding around points
    nudge_y = 0.5,  # Adjust vertical nudge
    nudge_x = 0.5   # Adjust horizontal nudge
  ) +
  geom_dag_edges(
    edge_color = "gray50", 
    edge_width = 0.5
  ) +
  theme_dag(
    base_size = 10,
    base_family = "",
    plot.background = element_rect(fill = "white"),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5, 
      size = 10, 
      face = "bold"
    ),
    plot.margin = margin(20,20,20,20),
    legend.position = "bottom",
    legend.background = element_rect(fill = "white", color = "gray80"),
    legend.title = element_text(face = "bold")
  ) 
# +
#   ggtitle("Adjustment Set for Directed Acyclic Graph")


knitr::knit_print(Figure13)

```

A recent systematic review (69 articles) and meta-analysis (16 articles) [@gould2021] identified a number of factors that may be associated with readmission risk after total knee arthroplasty, summarised in the table below (Table).

::: {#tbl-adjust-allcause}
| Variable                        | Present in current dataset |
|---------------------------------|----------------------------|
| In-hospital complication        | ✅                         |
| Peripheral vascular disease     | ✅\*                       |
| Liver disease                   | ❌                         |
| Anaemia                         | ❌                         |
| Coagulopathy                    | ❌                         |
| Fluid and electrolyte disorders | ❌                         |
| Chronic pulmonary disease       | ❌                         |
| Smoking history                 | ✅                         |
| Psychiatric disorders           | ❌                         |
| Rheumatologic disorders         | ✅†                        |
| Cardiovascular comorbidity      | ✅                         |
| Diabetes                        | ✅                         |
| Obesity                         | ✅\*\*                     |

Summmary of potential factors associated with **all-cause readmission** after total knee arthroplasty.
:::

†Stored in the dataset as autoimmune comorbidities. \*\*Stored in the dataset as body mass index (BMI).

```{r}
#| label: fig-dag-allcause
#| fig-cap: "Directed acyclic graph of all-cause readmission after total knee arthroplasty."

DAGAE4 <- dagify(
  ACRadmit ~ GuidanceGroup 
  + BMI 
  + ComorbidSmoke 
  + ComorbidAutoimmune 
  + ComorbidCardiovascular 
  + ComorbidDiabetes,
  GuidanceGroup ~ BMI 
  + ComorbidSmoke 
  + ComorbidCardiovascular 
  + ComorbidDiabetes, #assumptions prior to group comparison
          ComorbidSmoke ~ BMI,
          ComorbidCardiovascular ~ ComorbidDiabetes + BMI,
          ComorbidDiabetes ~ BMI,
  labels = c(
    "ACRadmit" = "Readmission",
    "GuidanceGroup" = "Guidance Group",
    "BMI" = "Body Mass Index",
    "ComorbidSmoke" = "Smoking History",
    "ComorbidAutoimmune" = "Autoimmune Disorders",
    "ComorbidCardiovascular" = "CVD",
    "ComorbidDiabetes" = "Diabetes History"
    
  ),
  exposure = "GuidanceGroup",
  outcome = "ACRadmit"
)

# Create a tidy version of the DAG and apply custom labels
tidy_dag5 <- tidy_dagitty(DAGAE4, layout = "auto") %>%
  mutate(label = case_when(
    name == "ACRadmit" ~ "Readmission",
    name == "GuidanceGroup" ~ "Guidance Group",
    name == "BMI" ~ "Body Mass Index",
    name == "ComorbidSmoke" ~ "Smoking History",
    name == "ComorbidAutoimmune" ~ "Autoimmune Disorders",
    name == "ComorbidCardiovascular" ~ "CVD",
    name == "ComorbidDiabetes" ~ "Diabetes History",
    TRUE ~ name
  ))

Figure14 <- ggplot(
  tidy_dag5, 
  aes(
    x = x, 
    y = y, 
    xend = xend, 
    yend = yend)
  ) +
  geom_dag_node(
    color = "darkblue", 
    fill = "lightblue", 
    alpha = 0.5, 
    size = 20) +
  geom_dag_text(
    aes(
      label = label
      ), 
    color = "black", 
    fontface = "bold", 
    size = 3, 
    vjust = 0.5
    ) +
  geom_dag_edges(
    edge_color = "gray50", 
    edge_width = 0.5, 
    #edge_arrow_size = 0.3
    ) +
  theme_dag(
    base_size = 12,
    base_family = "",
    plot.background = element_rect(fill = "white"),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5, 
      size = 16, 
      face = "bold"
      ),
    plot.margin = margin(
      20, 
      20, 
      20, 
      20
      )
  ) 
# +
#   ggtitle(
#     "Directed Acyclic Graph"
#     )

knitr::knit_print(Figure14)

```

```{r}
#| label: fig-adjust-allcause
#| fig-cap: "Calculated minimum adjustment set for modelling all-cause readmission after total knee arthroplasty."

Figure15 <- ggdag_adjustment_set(
  tidy_dag5,
  text = FALSE,
  #use_labels = "label"
  exposure = "GuidanceGroup",
  outcome = "ACRadmit"
  ) +
  geom_dag_node(
    color = "darkblue", 
    fill = "lightblue", 
    alpha = 0.7, 
    size = 10
  ) +
  # geom_dag_text(
  #   aes(label = label),  # Use the 'label' column directly
  #   color = "black", 
  #   fontface = "bold", 
  #   size = 3, 
  #   vjust = -1.5,  # Adjust vertical position
  #   hjust = 1.5,  # Adjust horizontal position
  #   show.legend = FALSE  # Prevent text from appearing in legend
  # ) +
  geom_dag_label_repel(
    aes(label = label, fill = adjusted),
    color = "white",
    fontface = "bold",
    size = 3,
    show.legend = FALSE,
    box.padding = unit(0.5, "lines"),  # Padding around labels
    point.padding = unit(0.5, "lines"),  # Padding around points
    nudge_y = 0.5,  # Adjust vertical nudge
    nudge_x = 0.5   # Adjust horizontal nudge
  ) +
  geom_dag_edges(
    edge_color = "gray50", 
    edge_width = 0.5
  ) +
  theme_dag(
    base_size = 10,
    base_family = "",
    plot.background = element_rect(fill = "white"),
    panel.background = element_rect(fill = "white")
  ) +
  theme(
    plot.title = element_text(
      hjust = 0.5, 
      size = 10, 
      face = "bold"
    ),
    plot.margin = margin(20,20,20,20),
    legend.position = "bottom",
    legend.background = element_rect(fill = "white", color = "gray80"),
    legend.title = element_text(face = "bold")
  ) 
# +
#   ggtitle("Adjustment Set for Directed Acyclic Graph")


knitr::knit_print(Figure15)

```

The master table was subset for adverse event analysis. To account for censoring over the follow up period (90 days), adjusted cox proportional hazards models were fit for each of the key adverse events (SSI, VTE, Stiffness, All-cause Readmission) based on incidence, with the minimal adjustment set as identified in the DAGs. The cox models were fit with the *survival* package (v`{r} utils::packageVersion("survival")` [@survival]. The assumption of proportional hazards was tested for each model.

```{r}

# https://stats.stackexchange.com/questions/518387/understanding-the-output-from-coxph-when-used-with-pspline

MasterSheetKM_Clean <- na.omit(MasterSheetKM)


# Superficial Infection
ModelCox1 <- survival::coxph(Surv(DurationInfectSuper,InfectionSuperficialBin) ~ Group1 + Sex + ComorbidSmoke,
                 data = MasterSheetKM_Clean,
                 id = PatientID2,
                 cluster = PatientID2
)
 
#VTE
ModelCox2 <- survival::coxph(Surv(DurationThrombo,ThromboembolismBin) ~ Group1 + Sex + ComorbidSmoke + ComorbidDiabetes,
                data = MasterSheetKM_Clean,
                 id = PatientID2,
                 cluster = PatientID2
)
 
#Stiffness
ModelCox3 <- survival::coxph(Surv(DurationStiff,StiffnessBin) ~ Group1 + Sex + ComorbidDiabetes,
                data = MasterSheetKM_Clean
)

#All-cause readmission
ModelCox4 <- survival::coxph(Surv(DurationReadmit,ReadmissionBin) ~ Group1 + Sex + ComorbidSmoke + ComorbidCardiovascular + pspline(BMI, df = 3),
                data = MasterSheetKM_Clean,
                id = PatientID2,
                cluster = PatientID2
)

```

## STROBE \[10\] Study size:

*Critically analyze the final study sample and the rationale/methods used for its justification.*

The sample size for this study was constrained by the number of cases available for analysis and meeting the inclusion criteria. For future studies a power calculation was observed of the incidence of surgical site infections using the *npsurvSS* package v(`{r} utils::packageVersion("npsurvSS")`) [@npsurvSS] using multiple tests (as per below). Future studies should conduct more robust power calculations using simulated data for prospective designs, based on the results of the present analysis as inputs.

```{r}

#https://stats.stackexchange.com/questions/601373/calculating-statistical-power-for-a-cox-proportional-hazards-regression-with-a-c

active <- npsurvSS::create_arm(size=258, 
                     accr_time=10, 
                     surv_scale=0.039, 
                     loss_scale=0, 
                     follow_time=90)
control <- npsurvSS::create_arm(size=173, 
                     accr_time = 10, 
                     surv_scale = 0.023, 
                     loss_scale = 0, 
                     follow_time = 90)

# SampleEx <- seq(0, 90, 0.1)
# plot(SampleEx, psurv(q=SampleEx, arm=control, lower.tail=F),
#      xlab="Time from study entry (days)",
#      ylab="Survival function",
#      type="l")

```

Table 16: Estimated power based on calculated incidences of Robot and Pre-Robot groups for superficial infection after total knee arthroplasty at 90 day follow up.

```{r}
#| echo: true


# Your existing power analysis code
SampleSize1 <- power_two_arm(active, control,
              test=
                list(list(test="weighted logrank"),
                list(test="weighted logrank", weight="n"),
                list(test="survival difference", milestone=90),
                list(test="rmst ratio", milestone=90))
)

# Create a data frame from the results
SampleSize_df <- data.frame(
  Test = c("Weighted logrank", "Weighted logrank (n)", "Survival difference", "RMST ratio"),
  #TestNumber = SampleSize1$test,
  Power = SampleSize1$power
)

# Create the gt table
results_table <- SampleSize_df %>%
  gt() %>%
  tab_header(
    title = "Power Analysis Results",
    subtitle = "Two-arm survival analysis"
  ) %>%
  fmt_number(
    columns = c(Power),
    decimals = 2
  ) %>%
  cols_label(
    Test = "Test Type",
    #TestNumber = "Test Number",
    Power = "Power"
  ) %>%
  tab_source_note(
    source_note = "Based on npsurvSS::power_two_arm() function"
  )

# gt table, cannot display using as_flex_table
knitr::knit_print(results_table)
```

## IDEAL Stage2b \[5\]: Learning effect

*Where possible, the effect of skill differences and learning should be assessed with appropriate data analysis*

The number of cases per surgeon by alignment delivery method were cross-tabulated for visualisation purposes, but not compared.

```{r}
#| label: tbl-casevolume
#| tbl-cap: "Case volume by surgeon label across Groups."

Table17 <- tbl_cross(
  MasterSheet6,
  row = Surgeon,
  col = Group1,
  percent = "row",
  margin = c("row")
)

as_flex_table(Table17) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )
```

# Results:

## STROBE \[13\] Participant Flow:

*Critically assess the transparency and completeness of participant flow reporting.*

A flow chart of record retrieval, review and grouping was constructed using the *consort* package v(`{r} utils::packageVersion("consort")`) [@consort].

```{r}

MasterList3 <- left_join(
  MasterList2,
  MasterSheet1 %>% dplyr::select(
    TempIDFull,
    ProgressComment,
    ProgressIndicator,
    PotentialExclus
  ),
  by = "TempIDFull"
) %>% left_join(
  .,
  MasterSheet6 %>% dplyr::select(
    TempIDFull,
    Group1
  ),
  by = "TempIDFull"
)

```

```{r}
# Check for any mismatches
JoinCheck <- anti_join(
  MasterList3, 
  MasterSheet6, 
  by = "TempIDFull"
  ) %>% mutate(
    Exclusion = case_when(
      #PotentialExclus == "Yes" ~ "Excluded after Review",
      SurgerySide == "Bilateral" ~ "Vendor Duplicate",
      SurgeryType != "Primary" ~ "Surgery Type",
      is.na(SurgeryDate) ~ "Cancellation|Wait List",
      Source == "Vendor" ~ "Unable to Match",
      SurgeryDate > lubridate::ymd("2023-03-01") ~ "Surgery Date",
      SurgeryDate > lubridate::ymd("2023-03-01") ~ "Surgery Date",
      .default = "Unable to Match"
    )
  )
```

```{r}
CONSORTInput <- left_join(
  MasterList3,
  JoinCheck %>% dplyr::select(
    TempIDFull,
    Exclusion
    ),
  by = "TempIDFull"
) %>% rename(
  exclusion1 = "Exclusion",
  trialno = "TempIDFull",
  arm3 = "Group1"
) %>% mutate(
  exclusion2 = case_when(
    PotentialExclus == "Yes" & str_detect(str_to_lower(ProgressComment),"dair|unicomp*|hemiarth*") ~ "Surgery Type",
    PotentialExclus == "Yes" & str_detect(str_to_lower(ProgressComment),"done") ~ "Cancellation",
    PotentialExclus == "Yes" & str_detect(str_to_lower(ProgressComment),"iemr|note") ~ "Record unavailable",
    PotentialExclus == "Yes" & str_detect(str_to_lower(ProgressComment),"duplicate") ~ "Record duplicate",
    .default = NA_character_
  )
) %>% mutate(
  exclusion1 = ifelse(!is.na(exclusion2),NA_character_,exclusion1)
) %>% mutate(
  induction = ifelse(is.na(exclusion1),trialno,NA_character_)
)
```

```{r}
#| label: fig-strobeflow
#| fig-cap: "Flowchart of record ingestion and review."


ConsortPlot <- consort::consort_plot(
  data = CONSORTInput,
  orders = c(
    trialno = "Population for Review",
    exclusion1 = "Excluded Prior\n to Chart Review",
    induction = "Chart Review",
    exclusion2 = "Excluded",
    arm3 = "Grouping"
  ),
  side_box = c(
    "exclusion1",
    "exclusion2"
  ),
  allocation = "arm3",
  labels = c(
    "1" = "Record ingestion", 
    "2" = "Review",
    "3" = "Grouping"),
  cex = 0.7
)

plot(ConsortPlot)
```

## STROBE \[14\] Descriptive Data:

*Evaluate the adequacy of the presentation of characteristics of the study population.*

```{r}
#| label: tbl-strobeflow
#| tbl-cap: "Patient characteristics of analysis sample separated by Group."

TableChar <- tbl_summary(
  MasterSheet6 %>% dplyr::select(
    Group1,
    Sex:ComorbidCancer,
    BilateralStatus2
  ),
  by = Group1,
   missing = "no"
) %>% add_overall()

as_flex_table(TableChar) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )

```

## STROBE \[15\] Outcome Data:

*Evaluate the adequacy of the presentation of outcome data (over time).*

```{r}
#| label: tbl-outcomes
#| tbl-cap: "Summary of procedure duration and adverse events separated by Group."

TableOutcomes <- tbl_summary(
  MasterSheet6 %>% dplyr::select(
    Group1,
    ProcedureDuration,
    Bleed:Revision
  ),
  by = Group1,
   missing = "no"
) %>% add_overall()

as_flex_table(TableOutcomes) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )


```

```{epoxy}

The RAS group displayed {gtsummary::inline_text(TableOutcomes, variable = Delivery, column = "stat_1")} instances of the system failing intraoperatively. 

```

```{r}
#| label: tbl-rascomp
#| tbl-cap: "Complications identified intraoperatively with RAS delivery."

DeliveryComp <- ComplicResponse7 %>% filter(
  Category_Value == "Delivery"
) %>% dplyr::select(
  SurgeryDate,
  ComplicationNature
) %>% gt::gt()

knitr::knit_print(DeliveryComp)

```

## STROBE \[16\] Main Results:

*Critically analyze the presentation and interpretation of primary findings, including effect estimates and confidence intervals.*

### Procedure Duration

The residual fits and leverage points for the gamma regression were outside acceptable patterns (see STROBE 17 for further details). The model appeared to suffer from non-linear patterns of residuals, heteroscedasticity and outliers (Figures 17 and 18). Further work may be required to refine the model further to establish a better fit to the observed data.

```{r}
#| label: fig-duration
#| fig-cap: "Summary of gamma regression residuals for procedure duration."

# Assuming Duration_model is your linear model
model_data <- data.frame(
  fitted = fitted(Duration_model),
  residuals = resid(Duration_model)
)

# Create the ggplot
Durationp1 <- ggplot(model_data, aes(x = fitted, y = residuals)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
  geom_smooth(se = FALSE, method = "loess", color = "red") +
  labs(x = "Fitted values",
       y = "Residuals",
       title = "Residuals vs Fitted") +
  theme_minimal()


knitr::knit_print(Durationp1)
```

```{r}
#| label: fig-duration2
#| fig-cap: "Summary of gamma regression leverage points (qq plot) for procedure duration."

# Assuming m1 is your model
residuals <- resid(Duration_model)

# Create a data frame with theoretical and sample quantiles
qq_data <- qqplot(qnorm(ppoints(length(residuals))), 
                  residuals, 
                  plot.it = FALSE)

# Function to calculate qqline
qqline_data <- function(y, probs = c(0.25, 0.75), qtype = 7) {
  y <- quantile(y, probs, type = qtype, names = FALSE)
  x <- qnorm(probs)
  slope <- diff(y) / diff(x)
  int <- y[1L] - slope * x[1L]
  data.frame(intercept = int, slope = slope)
}

line_data <- qqline_data(residuals)

# Create the ggplot
Durationp2 <- ggplot(data.frame(x = qq_data$x, y = qq_data$y), aes(x = x, y = y)) +
  geom_point() +
  geom_abline(data = line_data, 
              aes(intercept = intercept, slope = slope), 
              color = "red", linetype = "dashed") +
  labs(x = "Theoretical Quantiles", 
       y = "Sample Quantiles",
       title = "Normal Q-Q Plot") +
  theme_minimal()

knitr::knit_print(Durationp2)
```

```{r}
#| label: tbl-durationmodel
#| tbl-cap: "Summary of gamma regression model to assess the effect of Group on procedure duration"

TableDuration <- tbl_regression(Duration_model, 
                                show_single_row = "BilateralStatus",
               label = list(BilateralStatus ~ "Bilateral" 
                            #AgeAtSurgery ~ "Age at Surgery",
                            #Pathology2 ~ "Osteoarthritis"
                            ),
               estimate_fun = function(x) style_number(x, digits = 2), pvalue_fun = function(x) style_pvalue(x, digits = 3)) 

as_flex_table(TableDuration) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )
```

```{r}
#marginaleffects package

DurationPredict <- marginaleffects::predictions(
  Duration_model,
  re.form = NA,
  type = "response",
  conf_level = 0.95)

```

```{r}
#| label: fig-duration-predict
#| fig-cap: "Distribution of model-predicted procedure duration separated by Group."

DurationFig <- ggplot(data = DurationPredict, mapping = aes(y = Group1, x = ProcedureDuration)) +
  stat_slab(aes(thickness = after_stat(pdf*n)), scale = 0.7) +
  stat_dotsinterval(side = "bottom", scale = 0.7, slab_linewidth = NA) +
  #scale_fill_brewer(palette = "Set2") +
  ggtitle('Model Predicted Procedure Duration by Group')

knitr::knit_print(DurationFig)
```

The model-predicted procedure duration conformed with the patterns visualised using the observed data @fig-duration-predict .

Table 20A:

```{r}
#| label: tbl-duration-posthoc
#| tbl-cap: "Post-hoc comparisons between Groups for procedure duration."

DurationPost <- avg_comparisons(
  Duration_model, 
  variables = list(Group1 = "pairwise"),
  type = "response",
  re.form = NA) %>% gt::gt() %>%
  fmt_number(
    decimals = 2
  )


knitr::knit_print(DurationPost) #gt object, cant be displayed as_flex_table

```

```{r}
#| label: tbl-duration-gamma
#| tbl-cap: "Summary of gamma regression model to assess the effect of Group on procedure duration"

# Calculate marginal means
TableDurationSum <- avg_predictions(Duration_model, 
                              by = "Group1",
                              re.form = NA,
                              conf_level = 0.95,
                              type = "response") %>% mutate(
                                standarddev = case_when(
                                  Group1 == "Pre-RAS" ~ std.error*(sqrt(nrow(Duration_Analysis %>% filter(Group1 == "Pre-RAS")))),
                                  Group1 == "Non-RAS" ~ std.error*(sqrt(nrow(Duration_Analysis %>% filter(Group1 == "Non-RAS")))),
                                  Group1 == "RAS" ~ std.error*(sqrt(nrow(Duration_Analysis %>% filter(Group1 == "RAS")))),
                                )
                              ) %>% dplyr::select(
                                Group1,
                                estimate,
                                standarddev,
                                std.error,
                                conf.low,
                                conf.high
                              ) %>% gt::gt() %>%
  fmt_number(
    decimals = 1
  )

knitr::knit_print(TableDurationSum)

```

```{epoxy}

The beta coefficient for the Department compared to the Robot group {gtsummary::inline_text(TableDuration, variable = Group1, level = "Non-RAS",
            pattern = "{estimate} (95% CI {conf.low} - {conf.high}],{p.value})")} was not significant. Similarly, cases with a unilateral procedure were not significantly shorter than bilateral, {gtsummary::inline_text(TableDuration, variable = BilateralStatus,
            pattern = "{estimate} (95% CI {conf.low} - {conf.high}),{p.value})")}.
This translated to an increase of {abs(round(DurationPost$`_data`$estimate[2],1))} minutes ({abs(round(DurationPost$`_data`$conf.high[2],1))} - {abs(round(DurationPost$`_data`$conf.low[2],1))}, p = {round(DurationPost$`_data`$p.value[2],3)}) for RAS cases compared to Non-RAS. 
However, a significant decrease was observed in the average procedure duration of {abs(round(DurationPost$`_data`$estimate[3],1))} ({(round(DurationPost$`_data`$conf.low[3],1))} - {round(DurationPost$`_data`$conf.high[3],1)}, p = {abs(round(DurationPost$`_data`$p.value[3],3))}) minutes per case for RAS cases, compared to Pre-RAS (@tbl-duration-gamma). 

```

### Adverse Events

```{r}
#| label: tbl-adverse
#| tbl-cap: "Summary of adverse event incidence separated by Group"

TableComp <- tbl_summary(
  data = MasterSheet6 %>% dplyr::select(
    Group1,
    Bleed,
    Thromboembolism,
    Neural,
    Vascular,
        Stiffness,
    InfectionSuperficial,
    InfectionDeep,
    InfectionSyst,
    PeriprostheticFracture,
    Patellofemoral,
    Delivery,
    Readmission,
    Reoperation,
    Revision
    
  ),
  by = Group1
) %>% add_overall() %>% add_p() %>% add_q()

as_flex_table(TableComp) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )
```

```{r}
#| label: tbl-covariate
#| tbl-cap: "Summary of model covariates for adverse events separated by Group"


TableCov <- tbl_summary(
  MasterSheetKM %>% dplyr::select(
    Group1,
    AgeAtSurgery,
    Sex,
    BMI,
    ComorbidCardiovascular,
    ComorbidSmoke,
    ComorbidDiabetes
  ),
  by = Group1,
  missing = "no"
) %>% add_overall() %>% add_p()

as_flex_table(TableCov) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )
```

An important assumption for Cox proportional hazards models is that the hazard function for each Group remains proportional to the other Groups over the follow up period [@kuitunen2021]. The assumption was assessed using a score test calculated in the *survival* package.

```{r}
#| label: tbl-adverse-ph
#| tbl-cap: "Summary of proportional hazards assumption test p-values for adverse events adjusted Cox models"

#coxph diagnostics
# https://shariq-mohammed.github.io/files/cbsa2019/1-intro-to-survival.html#6_cox_regression


test.ph1 = survival::cox.zph(ModelCox1)
test.ph2 = survival::cox.zph(ModelCox2)
test.ph3 = survival::cox.zph(ModelCox3)
test.ph4 = survival::cox.zph(ModelCox4)


# Assuming you have already run the cox.zph tests as shown in your code

# Create a function to format the cox.zph results
format_coxzph <- function(test, model_name) {
  test$table %>%
    as.data.frame() %>%
    rownames_to_column("term") %>%
    mutate(
      model = model_name,
      p.value = p
    ) %>%
    select(model, term, p.value)
}

# Apply the function to each model's test results
ph_test1 <- format_coxzph(test.ph1, "Superficial Infection")
ph_test2 <- format_coxzph(test.ph2, "VTE")
ph_test3 <- format_coxzph(test.ph3, "Stiffness")
ph_test4 <- format_coxzph(test.ph4, "All-cause Readmission")

# Combine all test results
all_ph_tests <- bind_rows(ph_test1, ph_test2, ph_test3, ph_test4)

# Create the summary table
ph_summary_table <- all_ph_tests %>%
  mutate(
    term = ifelse(term == "GLOBAL", "Global test", term)
  ) %>%
  pivot_wider(
    names_from = model,
    values_from = p.value
  ) %>%
  gtsummary::tbl_summary(
    by = term,
    type = everything() ~ "continuous",
    digits = everything() ~ 3,
    missing = "no",
    statistic = everything() ~ "{median}"
  ) %>%
  modify_header(all_stat_cols() ~ "**{level}**") %>%
  #modify_spanning_header(all_stat_cols() ~ "**Model**") %>%
  modify_caption("Proportional Hazards Assumption Test (p-values)") %>%
  modify_footnote(everything() ~ "Median p-value shown")

# Display the table
as_flex_table(ph_summary_table) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )


```

The adjusted models revealed no significant effect of Group on any incidence of SSI, VTE, stiffness or all-cause readmission after total knee arthroplasty in the first 90 days after surgery (Table 24).

```{r}
#| label: tbl-adverse-coxph
#| tbl-cap: "Summary of adjusted Cox proportional hazards models for surgical site infection, venous thromboembolism, stiffness and all-cause readmission"


TableCox1 <- tbl_regression(
  ModelCox1,
  exponentiate = TRUE,
  show_single_row = c(
    "Sex",
    "ComorbidSmoke"),
  label = list(
    Sex = "Sex (Male)",
    ComorbidSmoke = "Smoking History"
  )
)

TableCox2 <- tbl_regression(
  ModelCox2,
  exponentiate = TRUE,
  show_single_row = c(
    "Sex",
    "ComorbidDiabetes",
    "ComorbidSmoke"
    ),
  label = list(
    Sex = "Sex (Male)",
    ComorbidDiabetes = "Diabetes",
    ComorbidSmoke = "Smoking History"
  )
)

TableCox3 <- tbl_regression(
  ModelCox3,
  exponentiate = TRUE,
  show_single_row = c(
    "Sex",
    "ComorbidDiabetes"
    ),
  label = list(
    Sex = "Sex (Male)",
    ComorbidDiabetes = "Diabetes"
  )
)

TableCox4 <- tbl_regression(
  ModelCox4,
  exponentiate = TRUE,
  show_single_row = c(
    "Sex",
    "ComorbidSmoke",
    "ComorbidCardiovascular"
    ),
  label = list(
    Sex = "Sex (Male)",
    #`pspline(BMI, df = 3)` = "Body Mass Index",
    ComorbidSmoke = "Smoking History",
    ComorbidCardiovascular = "Cardiovascular Disease"
    
  )
)

TableCox <- tbl_merge(
  list(TableCox1,
       TableCox2,
       TableCox3,
       TableCox4
       ),
  tab_spanner = c("Superficial Infection",
                   "Thromboembolism",
                  "Stiffness",
                  "Readmission"
                  )
)



as_flex_table(TableCox) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )
```

```{r}
#| label: fig-adverse-coxph
#| fig-cap: "Summary of adjusted cox proportional hazards models for SSI (Left) and VTE (Right)"

# Maybe swap out for this
# https://cran.r-project.org/web/packages/survivalAnalysis/vignettes/multivariate.html

# Tidy the model output
tidy_cox1 <- broom::tidy(ModelCox1)
tidy_cox2 <- broom::tidy(ModelCox2)
tidy_cox3 <- broom::tidy(ModelCox3)
tidy_cox4 <- broom::tidy(ModelCox4)

# Add confidence intervals
tidy_cox1 <- tidy_cox1 %>%
  mutate(conf.low = estimate - 1.96 * std.error,
         conf.high = estimate + 1.96 * std.error)

tidy_cox2 <- tidy_cox2 %>%
  mutate(conf.low = estimate - 1.96 * std.error,
         conf.high = estimate + 1.96 * std.error)

tidy_cox3 <- tidy_cox3 %>%
  mutate(conf.low = estimate - 1.96 * std.error,
         conf.high = estimate + 1.96 * std.error)

tidy_cox4 <- tidy_cox4 %>%
  mutate(conf.low = estimate - 1.96 * std.error,
         conf.high = estimate + 1.96 * std.error)

# Plot using ggplot2
FigureCox1 <- ggplot(tidy_cox1, aes(x = term, y = estimate, ymin = conf.low, ymax = conf.high)) +
  geom_pointrange() +
  coord_flip() +  # Flip the coordinates for better readability
  labs(
    title = "Superficial Infection",
    x = "Terms",
    y = "Coefficient Estimate"
  ) +
  theme_ggdist()

FigureCox2 <- ggplot(tidy_cox2, aes(x = term, y = estimate, ymin = conf.low, ymax = conf.high)) +
  geom_pointrange() +
  coord_flip() +  # Flip the coordinates for better readability
  labs(
    title = "Thromboembolism",
    x = "Terms",
    y = "Coefficient Estimate"
  ) +
  theme_ggdist()

FigureCox3 <- ggplot(tidy_cox3, aes(x = term, y = estimate, ymin = conf.low, ymax = conf.high)) +
  geom_pointrange() +
  coord_flip() +  # Flip the coordinates for better readability
  labs(
    title = "Stiffness",
    x = "Terms",
    y = "Coefficient Estimate"
  ) +
  theme_ggdist()

FigureCox4 <- ggplot(tidy_cox4, aes(x = term, y = estimate, ymin = conf.low, ymax = conf.high)) +
  geom_pointrange() +
  coord_flip() +  # Flip the coordinates for better readability
  labs(
    title = "Readmission",
    x = "Terms",
    y = "Coefficient Estimate"
  ) +
  theme_ggdist()

patchwork::wrap_plots(FigureCox1,FigureCox2)
```

```{r}
#| label: fig-bmi-spline
#| fig-cap: "Relationship between penalised spline of body mass index on all-cause readmission risk."

# Assume ModelCox1 is your Cox model
ptemp <- termplot(ModelCox4, se = TRUE, plot = FALSE)
attributes(ptemp)

# Extract the term data
term <- ptemp$BMI

# Calculate the center value by mean
center <- mean(term$x)

# Calculate y values with confidence intervals
ytemp <- term$y + outer(term$se, c(0, -1.96, 1.96), '*')

# Create a data frame for ggplot2
df <- data.frame(
  BMI = rep(term$x, 3),
  RelativeRate = exp(c(ytemp[,1], ytemp[,2], ytemp[,3])),
  Type = factor(rep(c("Estimate", "Lower", "Upper"), each = nrow(ytemp)))
)

# Plot using ggplot2
FigureCox1 <- ggplot(df, aes(x = BMI, y = RelativeRate, linetype = Type)) +
  geom_line(color = "black") +
  scale_y_log10() +
  labs(
    x = "BMI",
    y = "Relative readmission rate",
    linetype = "Type"
  ) +
  theme_minimal()

knitr::knit_print(FigureCox1)
```

```{r}
#| warning: false


ModelCox1a <- survival::coxph(Surv(DurationInfectSuper,InfectionSuperficialBin) ~ Group1 + Sex + ComorbidSmoke,
                data = MasterSheetKM_Clean,
                x = TRUE
)


ModelCox2a <- survival::coxph(Surv(DurationThrombo,ThromboembolismBin) ~ Group1 + Sex + ComorbidSmoke + ComorbidDiabetes,
                data = MasterSheetKM_Clean,
                x = TRUE
)

ModelCox3a <- survival::coxph(Surv(DurationStiff,StiffnessBin) ~ Group1 + Sex + ComorbidDiabetes,
                data = MasterSheetKM_Clean,
                x = TRUE
)

ModelCox4a <- survival::coxph(Surv(DurationReadmit,ReadmissionBin) ~ Group1 + Sex + ComorbidSmoke + ComorbidDiabetes + ComorbidCardiovascular,
                data = MasterSheetKM_Clean,
                x = TRUE
)

AdjustCurve1 <- adjustedCurves::adjustedsurv(data= MasterSheetKM_Clean,
                        variable="Group1",
                        ev_time="DurationInfectSuper",
                        event="InfectionSuperficialBin",
                        method="direct",
                        outcome_model= ModelCox1a,
                        conf_int=TRUE, 
                        bootstrap = TRUE, 
                        n_boot = 100)

AdjustCurve2 <- adjustedCurves::adjustedsurv(data= MasterSheetKM_Clean,
                        variable="Group1",
                        ev_time="DurationThrombo",
                        event="ThromboembolismBin",
                        method="direct",
                        outcome_model= ModelCox2a,
                        conf_int=TRUE, 
                        bootstrap = TRUE, 
                        n_boot = 100)

AdjustCurve3 <- adjustedCurves::adjustedsurv(data= MasterSheetKM_Clean,
                        variable="Group1",
                        ev_time="DurationStiff",
                        event="StiffnessBin",
                        method="direct",
                        outcome_model= ModelCox3a,
                        conf_int=TRUE, 
                        bootstrap = TRUE, 
                        n_boot = 100)

AdjustCurve4 <- adjustedCurves::adjustedsurv(data= MasterSheetKM_Clean,
                        variable="Group1",
                        ev_time="DurationReadmit",
                        event="ReadmissionBin",
                        method="direct",
                        outcome_model= ModelCox4a,
                        conf_int=TRUE, 
                        bootstrap = TRUE, 
                        n_boot = 100)




```

```{r}
#| label: fig-adjustcurve1
#| fig-cap: "Adjusted survival curves for surgical site infection (top) and venous thromboembolism (bottom) by Group"

AdjustCurveFig1 <- plot(
  AdjustCurve1,
  conf_int = FALSE,
     gg_theme=ggdist::theme_ggdist(),
     # risk_table = TRUE,
     # risk_table_type = "n_events",
     # risk_table_stratify = TRUE, 
     # risk_table_height = 0.35
     )

AdjustCurveFig2 <- plot(
  AdjustCurve2, 
  conf_int = FALSE,
     gg_theme=ggdist::theme_ggdist(),
     # risk_table = TRUE,
     # risk_table_type = "n_events",
     # risk_table_stratify = TRUE, 
     # risk_table_height = 0.35
  )

AdjustCurveFig1 / AdjustCurveFig2

```

```{r}
#| label: fig-adjustcurve2
#| fig-cap: "Adjusted survival curves for stiffness (top) and all-cause readmission (bottom) by Group"

AdjustCurveFig3 <- plot(
  AdjustCurve3,
  conf_int = FALSE,
     gg_theme = ggdist::theme_ggdist(),
     # risk_table = TRUE,
     # risk_table_type = "n_events",
     # risk_table_stratify = TRUE, 
     # risk_table_height = 0.35
     )

AdjustCurveFig4 <- plot(
  AdjustCurve4, 
  conf_int = FALSE,
     gg_theme = ggdist::theme_ggdist(),
     # risk_table = TRUE,
     # risk_table_type = "n_events",
     # risk_table_stratify = TRUE, 
     # risk_table_height = 0.35
  )

AdjustCurveFig3 / AdjustCurveFig4

```

## STROBE \[17\] Other Analyses:

*Critically analyze the presentation and interpretation of subgroups, interactions or the description and evaluation of sensitivity analyses.*

```{r}
#| label: tbl-survival-infect
#| tbl-cap: "Summary of survival from superficial infection up to 90 days after total knee arthroplasty by group*sex interaction and for males only compared between Group"

# Step 1: Prepare the data
MasterSheetKM_Clean <- MasterSheetKM_Clean %>%
  mutate(Group1Sex = interaction(Group1, Sex))

# Step 2: Fit the Kaplan-Meier model
km_fit1 <- survfit(Surv(DurationInfectSuper, InfectionSuperficialBin) ~ Group1Sex, 
                  data = MasterSheetKM_Clean)

# Step 3: Create the table
TableKM1 <- km_fit1 %>% 
  tbl_survfit(
    times = c(14, 90),
    label_header = "**Days {time}**"
  ) %>% 
  add_p() %>%
  add_n() %>%
  add_nevent()


# Step 1: Prepare the data
MasterSheetKM_Clean <- MasterSheetKM_Clean %>%
  mutate(Group1Sex = interaction(Group1, Sex))

# Step 2: Fit the Kaplan-Meier model
km_fit2 <- survfit(Surv(DurationInfectSuper, InfectionSuperficialBin) ~ Group1, 
                  data = MasterSheetKM_Clean %>% filter(Sex == "Male"))

# Step 3: Create the table
TableKM2 <- km_fit2 %>% 
  tbl_survfit(
    times = c(14, 90),
    label_header = "**Days {time}**"
  ) %>% 
  add_p() %>%
  add_n() %>%
  add_nevent()


TableKMComb <- tbl_stack(
list(TableKM1,TableKM2),
group_header = c("Group-Sex Interaction","Male Subset")
)

as_flex_table(TableKMComb) %>% flextable::set_table_properties(
  .,
  layout = "autofit",
  width = 0.15,
  align = "center",
  opts_word = list(
    split = TRUE
    )
  )

```

```{epoxy}

The survival rate at 90 day follow up for males undergoing RAS was {gtsummary::inline_text(TableKM2, time = 90, level = "RAS",
            pattern = "{estimate} [95% CI {conf.low} - {conf.high}]")}, but this did not reach significance when compared to the other groups ({gtsummary::inline_text(TableKM2, column = p.value)}).

```

### Model sensitivity - Procedure duration

```{r}
model_inverse <- lme4::glmer(ProcedureDuration ~ Group1 + BilateralStatus + (1|PatientID2),
                     family = Gamma(link = "log"),
                     data = Duration_Analysis)
model_log <- lme4::glmer(ProcedureDuration ~ Group1 + BilateralStatus + (1|PatientID2),
                     family = Gamma(link = "inverse"),
                     data = Duration_Analysis)
model_identity <- lme4::glmer(ProcedureDuration ~ Group1 + BilateralStatus + (1|PatientID2),
                     family = Gamma(link = "identity"),
                     data = Duration_Analysis)
model_sqrt <- lme4::glmer(ProcedureDuration ~ Group1 + BilateralStatus + (1|PatientID2),
                     family = Gamma(link = "sqrt"),
                     data = Duration_Analysis)
```

```{r}
#| label: tbl-gamma-comp
#| tbl-cap: "Summary of Akaike information criterion and Bayesian information criterion values for four variations of the gamma link function for procedure duration modelling"


# Calculate AIC and BIC values for each model
AIC_values <- AIC(model_inverse, model_log, model_identity, model_sqrt)
BIC_values <- BIC(model_inverse, model_log, model_identity, model_sqrt)

# Create a data frame with the AIC and BIC values
results <- data.frame(
  Model = c("Inverse Link", "Log Link", "Identity Link", "Square Root Link"),
  AIC = AIC_values[,2],
  BIC = BIC_values[,2]
)

# Convert the data frame to a gt table
results_table <- results %>%
  gt() |>
  tab_header(
    title = "Model Comparison: AIC and BIC"
  ) |>
  cols_label(
    Model = "Model",
    AIC = "AIC",
    BIC = "BIC"
  )

knitr::knit_print(results_table) #gt table, cant be converted to flextable
```

Model predictions displayed consistent patterns, regardless of the link function used.

```{r}
#marginaleffects package

DurationPredictInv <- marginaleffects::predictions(model_inverse, re.form = NA)
DurationPredictLog <- marginaleffects::predictions(model_log, re.form = NA)
DurationPredictIdent <- marginaleffects::predictions(model_identity, re.form = NA)
DurationPredictSqrt <- marginaleffects::predictions(model_sqrt, re.form = NA)

```

```{r}
#| label: fig-gamma-comp
#| fig-cap: "Model predicted procedure duration with different link functions within the gamma family of generalised linear models for procedure duration"


DurationFigInv <- ggplot(data = DurationPredictInv, mapping = aes(y = Group1, x = ProcedureDuration)) +
  stat_slab(aes(thickness = after_stat(pdf*n)), scale = 0.7) +
  stat_dotsinterval(side = "bottom", scale = 0.7, slab_linewidth = NA) +
  #scale_fill_brewer(palette = "Set2") +
  ggtitle('Inverse')

DurationFigLog <- ggplot(data = DurationPredictLog, mapping = aes(y = Group1, x = ProcedureDuration)) +
  stat_slab(aes(thickness = after_stat(pdf*n)), scale = 0.7) +
  stat_dotsinterval(side = "bottom", scale = 0.7, slab_linewidth = NA) +
  #scale_fill_brewer(palette = "Set2") +
  ggtitle('Log')

DurationFigIdent <- ggplot(data = DurationPredictIdent, mapping = aes(y = Group1, x = ProcedureDuration)) +
  stat_slab(aes(thickness = after_stat(pdf*n)), scale = 0.7) +
  stat_dotsinterval(side = "bottom", scale = 0.7, slab_linewidth = NA) +
  #scale_fill_brewer(palette = "Set2") +
  ggtitle('Identity')

DurationFigSqrt <- ggplot(data = DurationPredictSqrt, mapping = aes(y = Group1, x = ProcedureDuration)) +
  stat_slab(aes(thickness = after_stat(pdf*n)), scale = 0.7) +
  stat_dotsinterval(side = "bottom", scale = 0.7, slab_linewidth = NA) +
  #scale_fill_brewer(palette = "Set2") +
  ggtitle('Square Root')

patchwork::wrap_plots(DurationFigInv,DurationFigLog,DurationFigIdent,DurationFigSqrt)


```

```{r}
#| label: fig-gamma-comp-residuals
#| fig-cap: "Summary of residuals across variations of link function within the gamma family of generalised linear models for procedure duration"

# Function to create a ggplot of residuals vs fitted
plot_residuals <- function(model, title) {
  df <- data.frame(
    fitted = fitted(model),
    residuals = residuals(model, type = "pearson")
  )
  ggplot(df, aes(x = fitted, y = residuals)) +
    geom_point() +
    geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
    ggtitle(title) +
    xlab("Fitted values") +
    ylab("Pearson residuals")
}

# Create plots for each model
p1 <- plot_residuals(model_inverse, "Inverse Link")
p2 <- plot_residuals(model_log, "Log Link")
p3 <- plot_residuals(model_identity, "Identity Link")
p4 <- plot_residuals(model_sqrt, "Square Root Link")



patchwork::wrap_plots(p1,p2,p3,p4)

```

# Discussion:

## STROBE \[18\] Key Results:

*Critically interpret the findings in the context of the study objectives.*

The key results can be summarised as follows;

1.  Introduction of a robotic system leads to a significant, but relatively small reduction in procedure duration.

2.  No discernible *main effect* on survival hazard relative to the most common post-operative complications (SSI, VTE, Stiffness, All-cause readmission).

3.  A potential *interaction* effect between Sex and the introduction of a robotic system with respect to SSI, although the difference between Groups did not reach significance. Nevertheless, the size of the effect equaled a six-fold increase in SSI in males after the introduction of the robot.

## STROBE \[19\] Limitations:

*Provide a thorough critique of the limitations of the study design, methods, and data.*

The limitations of the analysis can be summarised in the table below and should be prioritised for inclusion in the manuscript. Further work may be required to draw on existing literature to strengthen the argument for impact and/or mitigation measures.

::: {#tbl-limitations}
+----------------+------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Component      | Limitation                                                                                                                   | Impact                                                                                                                                                   | Mitigation                                                                                                                                                    |
+================+==============================================================================================================================+==========================================================================================================================================================+===============================================================================================================================================================+
| Setting        | Public hospital with highly variable surgeon group                                                                           | Variability in perioperative management and detection \| reporting of adverse events. Limit ability to attribute observations to Group assignment.       | Temper language with respect to conclusions and causality of differences observed between Groups.                                                             |
+----------------+------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Design         | Retrospective cohort analysis with inherent biases                                                                           | Information bias may change the distribution of outcomes between groups and lead to misleading results                                                   | Restrict dataset to cases that could be verified and with sufficient information to assign to a Group accurately.                                             |
+----------------+------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Data 1         | Issues with retrieving hospital data created gaps in the timeline and difficulties with verifying case matches               | Increased the rejection rate within the data pool. Considering the temporal nature of the omissions it may have impacted one group more than the others. | The overall sample seems sufficient for adequately powered comparison between groups. However, bias with respect to generalisability cannot be fully removed. |
+----------------+------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Data 2         | Clinical flow and population returned few events for certain adverse categories, limiting the capacity for adjusted analysis | The robot RAS introduction could not be fully assessed for all adverse events.                                                                           | Future work should consider multi-state models to assess incidence of transition between adverse event states across the follow up period.                    |
+----------------+------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Methods        | Model fitting was challenging for some outcome measures and may need further refinement.                                     | The procedure duration model in particular may present erroneous results and should be interpreted cautiously.                                           | Further refinement of models comparing procedure duration in this context and population should be prioritised in future work.                                |
+----------------+------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------+

Summary of key limitations of the presented analysis
:::

## STROBE \[20\] Interpretation:

*Assess whether the interpretation is adequately cautious and whether the comparisons to related literature are appropriate. Assess the implications of the findings for clinical practice and the need for further research, considering alternative interpretations.*

The study co-authors need to take into account the main findings in the context of other components of this report to make a balanced interpretation of the findings.

The key suggestion here is to better understand the medium-term risks of surgical site infection (SSI) on the development of periprosthetic joint infection within the first 12-24months after surgery. Given the relationship between the soft tissue and the knee joint (compared to the hip) it is posited that SSI may be a key risk factor for developing PJI within this period, however more work with the relevant literature is required.

## STROBE \[21\] Generalizability:

*Evaluate the strength of evidence supporting the external validity of the findings.*

It is recommended that the population characteristics and healthcare setting (hospital type, size, location) are considered when comparing the findings to relevant studies in the contemporary literature.

The fact that the patient population is attending a public, medium-sized hospital in a metropolitan setting in an Australian capital city poses key constraints on the ability to directly compare findings between this study and others. These aspects need to be taken into account when interpreting the results in the context of the related literature.

The analysis design is also relatively novel with respect to the control groups constructed from the retrospective data, as well as the robust approach to the survival analysis (few studies attempt to adjust for covariates when comparing groups). In addition, the use of directed acyclic graphs to establish the adjustment set for each model is not commonly utilised in the relevant literature (although it should be).

## Comparison with Existing Literature:

*Critically compare findings with previous research, assessing consistency and discrepancies.*

The notes on generalisability above should be integrated into the literature comparison in place within the manuscript so far.

# Ethical Considerations:

## Informed Consent:

*Critically analyze the adequacy of procedures for obtaining informed consent from participants.*

A waiver of consent was granted to conduct chart review of the relevant patient records (see below).

## Ethical Approval:

*Evaluate whether the study received appropriate approval from an ethics committee or institutional review board.*

The study received HREC approval (No. 2023/QMS/95442) from the hospital HREC prior to commencement of chart review.

## Privacy and Confidentiality:

*Assess the adequacy of measures taken to protect participants' privacy and confidentiality. Beneficence and Non-maleficence: Critically evaluate any potential risks or benefits to participants and how they were addressed.*

Participant information was at risk of breach or leaking into the public domain. This risk was addressed by securing study materials using industry-standard methods to encrypt data at-rest within user-restricted data assets and in transit between the health service and the research team. Chart review was performed by approved persons with appropriate access and system credentials with training and experience on patient privacy and record management.

# Conflicts of Interest:

## STROBE \[22\] Funding:

*Assess the degree of transparency to which the source of funding and role of the funders have played in the study/article.*

The funding for this study was provided by the Department Research Fund. Some individuals responsible for administering the funds are co-authors of the study.

## Disclosure:

*Evaluate the transparency and completeness of disclosures regarding conflicts of interest among the study authors or sponsors.*

Author CS declares institutional funding (EBM Analytics) received for a project assessing the clinical outcomes of a competitor system.

## Potential for Biases:

*Critically assess whether conflicts of interest could have influenced the study design, analysis, or interpretation of results.*

Conflicts of interest could be perceived to influence the analysis or interpretation of results. Some authors are conflicted by their relationship to the hospital and the department in which the RAS is installed, others have a perceived conflict with respect to competitor systems available in the local market. These conflicts have been declared in the context of the study submission and are available for readers to interpret.

# References:

*Evaluate the quality and relevance of cited references, including any potential biases or omissions.*

No relevant commentary at this time.

# Analysis References
